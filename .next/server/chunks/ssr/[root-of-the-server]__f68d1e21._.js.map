{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { MenuItem, Category, Ingredient } from '@/lib/types';\n\n// Menu Item Actions\nexport async function addMenuItem(formData: FormData) {\n  const ingredientLinksString = formData.get('ingredientLinks') as string;\n  const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n  const newItemData: Omit<MenuItem, 'id' | 'cost'> = {\n    name: formData.get('name') as string,\n    description: formData.get('description') as string,\n    price: parseFloat(formData.get('price') as string),\n    category: formData.get('category') as string,\n    imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n    imageHint: 'food placeholder',\n    preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n    ingredientLinks: ingredientLinks,\n  };\n\n  try {\n    await addDoc(collection(db, 'menuItems'), newItemData);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add menu item.' };\n  }\n}\n\nexport async function updateMenuItem(id: string, formData: FormData) {\n    const ingredientLinksString = formData.get('ingredientLinks') as string;\n    const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n    const itemUpdates = {\n        name: formData.get('name') as string,\n        description: formData.get('description') as string,\n        price: parseFloat(formData.get('price') as string),\n        category: formData.get('category') as string,\n        imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n        preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n        ingredientLinks: ingredientLinks,\n    };\n    \n    try {\n        await updateDoc(doc(db, 'menuItems', id), itemUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update menu item.' };\n    }\n}\n\nexport async function deleteMenuItem(id: string) {\n    try {\n        await deleteDoc(doc(db, 'menuItems', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete menu item.' };\n    }\n}\n\n\nexport async function getMenuItems(): Promise<MenuItem[]> {\n  try {\n    const [menuItemsSnapshot, ingredientsSnapshot] = await Promise.all([\n        getDocs(collection(db, 'menuItems')),\n        getDocs(collection(db, 'ingredients'))\n    ]);\n\n    const ingredientsMap = new Map<string, Ingredient>();\n    ingredientsSnapshot.forEach(doc => {\n        const data = doc.data();\n        ingredientsMap.set(doc.id, { \n          id: doc.id,\n          name: data.name,\n          stock: data.stock || 0,\n          unit: data.unit || 'units',\n          cost: data.cost || 0,\n        } as Ingredient);\n    });\n\n    const items: MenuItem[] = [];\n    menuItemsSnapshot.forEach((doc) => {\n      const data = doc.data();\n      const menuItem = { id: doc.id, ...data } as MenuItem;\n      \n      let calculatedCost = 0;\n\n      // Resolve ingredient links\n      if (menuItem.ingredientLinks) {\n          menuItem.ingredients = menuItem.ingredientLinks\n            .map(link => {\n                const ingredient = ingredientsMap.get(link.ingredientId);\n                if (ingredient) {\n                    calculatedCost += (ingredient.cost || 0) * (link.quantity || 0);\n                    return { \n                      ...ingredient, \n                      isOptional: link.isOptional, \n                      quantity: link.quantity || 1, // Default quantity to 1 if not specified\n                    };\n                }\n                return null;\n            })\n            .filter(Boolean) as MenuItem['ingredients'];\n      }\n      \n      menuItem.cost = calculatedCost;\n      items.push(menuItem);\n    });\n\n    return items.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching menu items: \", error);\n    return [];\n  }\n}\n\n// Category Actions\nexport async function addCategory(formData: FormData) {\n  const newCategory = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'categories'), newCategory);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add category.' };\n  }\n}\n\n\nexport async function updateCategory(id: string, formData: FormData) {\n    const categoryUpdates = {\n        name: formData.get('name') as string,\n    };\n    try {\n        await updateDoc(doc(db, 'categories', id), categoryUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update category.' };\n    }\n}\n\nexport async function deleteCategory(id: string) {\n    try {\n        // TODO: Add logic to handle menu items in this category\n        await deleteDoc(doc(db, 'categories', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete category.' };\n    }\n}\n\n\nexport async function getCategories(): Promise<Category[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'categories'));\n    const categories: Category[] = [];\n    querySnapshot.forEach((doc) => {\n      categories.push({ id: doc.id, ...doc.data() } as Category);\n    });\n    return categories.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching categories: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/ingredients/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { Ingredient } from '@/lib/types';\n\nexport async function addIngredient(formData: FormData) {\n  const newIngredient: Omit<Ingredient, 'id'> = {\n    name: formData.get('name') as string,\n    stock: parseFloat(formData.get('stock') as string) || 0,\n    unit: formData.get('unit') as string || 'units',\n    cost: parseFloat(formData.get('cost') as string) || 0,\n  };\n\n  try {\n    await addDoc(collection(db, 'ingredients'), newIngredient);\n    revalidatePath('/admin/ingredients');\n    revalidatePath('/admin/menu'); // Revalidate menu page as it uses ingredients\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding ingredient: ', e);\n    if (e instanceof Error) {\n        return { success: false, error: e.message };\n    }\n    return { success: false, error: 'Failed to add ingredient.' };\n  }\n}\n\nexport async function updateIngredient(id: string, formData: FormData) {\n    const ingredientUpdates = {\n        name: formData.get('name') as string,\n        stock: parseFloat(formData.get('stock') as string) || 0,\n        unit: formData.get('unit') as string || 'units',\n        cost: parseFloat(formData.get('cost') as string) || 0,\n    };\n\n    try {\n        const ingredientRef = doc(db, 'ingredients', id);\n        await updateDoc(ingredientRef, ingredientUpdates);\n        revalidatePath('/admin/ingredients');\n        revalidatePath('/admin/menu');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating ingredient: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to update ingredient.' };\n    }\n}\n\nexport async function deleteIngredient(id: string) {\n    try {\n        await deleteDoc(doc(db, 'ingredients', id));\n        revalidatePath('/admin/ingredients');\n        revalidatePath('/admin/menu');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting ingredient: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to delete ingredient.' };\n    }\n}\n\n\nexport async function getIngredients(): Promise<Ingredient[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'ingredients'));\n    const ingredients: Ingredient[] = [];\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      ingredients.push({ \n        id: doc.id,\n        name: data.name,\n        stock: data.stock || 0,\n        unit: data.unit || 'units',\n        cost: data.cost || 0,\n       } as Ingredient);\n    });\n    return ingredients.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching ingredients: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/menu/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCategories as '00250df251d14c70356e11c41121848a2f36dad56d'} from 'ACTIONS_MODULE0'\nexport {getMenuItems as '005d27be1c353e62c14cdfbb8b42ccddcd8e2c5684'} from 'ACTIONS_MODULE0'\nexport {addCategory as '400429c5b6bcb909ddd2a39c11e5e1f030e8c92b27'} from 'ACTIONS_MODULE0'\nexport {addMenuItem as '401002fabdb1318c1d8692d2124063f7841de46d16'} from 'ACTIONS_MODULE0'\nexport {deleteMenuItem as '409633b7893991eb90313a41060c4f4bbc48ea7700'} from 'ACTIONS_MODULE0'\nexport {deleteCategory as '40b474bf37441dcfdd34cc4d3d2ca79f624b85dd4b'} from 'ACTIONS_MODULE0'\nexport {updateMenuItem as '60511643042e019d51761beaa4211f4151a0f47bb5'} from 'ACTIONS_MODULE0'\nexport {updateCategory as '608ede158997b2a525fa40a2e28425267f3051ac34'} from 'ACTIONS_MODULE0'\nexport {getIngredients as '00479c034c4f61ad1cbbf4089fa4983637e34520c3'} from 'ACTIONS_MODULE1'\nexport {addIngredient as '4096b3c8d80ef4e7d88f681927cfd5ce93c7d07efb'} from 'ACTIONS_MODULE1'\nexport {deleteIngredient as '40cd5e001dba0f16dc3e78a8cbf728d75006d058c8'} from 'ACTIONS_MODULE1'\nexport {updateIngredient as '6059bee7ba44454df51efd462a5e55374c4efddfa2'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAQA","debugId":null}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/menu-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/menu-client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/menu-client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwS,GACrU,sEACA","debugId":null}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/menu-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/menu-client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/menu-client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 643, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/page.tsx"],"sourcesContent":["import MenuClient from \"@/components/admin/menu-client\";\nimport { getMenuItems, getCategories } from \"./actions\";\nimport { getIngredients } from \"../ingredients/actions\";\n\nexport default async function AdminMenuPage() {\n    const [menuItems, categories, availableIngredients] = await Promise.all([\n        getMenuItems(),\n        getCategories(),\n        getIngredients()\n    ]);\n\n    return (\n       <MenuClient \n        initialMenuItems={menuItems} \n        initialCategories={categories} \n        availableIngredients={availableIngredients}\n    />\n    );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,eAAe;IAC1B,MAAM,CAAC,WAAW,YAAY,qBAAqB,GAAG,MAAM,QAAQ,GAAG,CAAC;QACpE,CAAA,GAAA,sIAAA,CAAA,eAAY,AAAD;QACX,CAAA,GAAA,sIAAA,CAAA,gBAAa,AAAD;QACZ,CAAA,GAAA,6IAAA,CAAA,iBAAc,AAAD;KAChB;IAED,qBACG,8OAAC,6IAAA,CAAA,UAAU;QACV,kBAAkB;QAClB,mBAAmB;QACnB,sBAAsB;;;;;;AAG9B","debugId":null}}]
}