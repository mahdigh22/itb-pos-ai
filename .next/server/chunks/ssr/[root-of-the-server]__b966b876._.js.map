{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { MenuItem, Category, Ingredient } from '@/lib/types';\n\n// Menu Item Actions\nexport async function addMenuItem(formData: FormData) {\n  const ingredientLinksString = formData.get('ingredientLinks') as string;\n  const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n  const newItemData: Omit<MenuItem, 'id'> = {\n    name: formData.get('name') as string,\n    description: formData.get('description') as string,\n    price: parseFloat(formData.get('price') as string),\n    category: formData.get('category') as string,\n    imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n    imageHint: 'food placeholder',\n    preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n    ingredientLinks: ingredientLinks,\n  };\n\n  try {\n    await addDoc(collection(db, 'menuItems'), newItemData);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add menu item.' };\n  }\n}\n\nexport async function getMenuItems(): Promise<MenuItem[]> {\n  try {\n    const [menuItemsSnapshot, ingredientsSnapshot] = await Promise.all([\n        getDocs(collection(db, 'menuItems')),\n        getDocs(collection(db, 'ingredients'))\n    ]);\n\n    const ingredientsMap = new Map<string, Ingredient>();\n    ingredientsSnapshot.forEach(doc => {\n        const data = doc.data();\n        ingredientsMap.set(doc.id, { \n          id: doc.id,\n          name: data.name,\n          stock: data.stock || 0,\n          unit: data.unit || 'units',\n        } as Ingredient);\n    });\n\n    const items: MenuItem[] = [];\n    menuItemsSnapshot.forEach((doc) => {\n      const data = doc.data();\n      const menuItem = { id: doc.id, ...data } as MenuItem;\n\n      // Resolve ingredient links\n      if (menuItem.ingredientLinks) {\n          menuItem.ingredients = menuItem.ingredientLinks\n            .map(link => {\n                const ingredient = ingredientsMap.get(link.ingredientId);\n                return ingredient ? { \n                  ...ingredient, \n                  isOptional: link.isOptional, \n                  quantity: link.quantity || 1, // Default quantity to 1 if not specified\n                } : null;\n            })\n            .filter(Boolean) as MenuItem['ingredients'];\n      }\n\n      items.push(menuItem);\n    });\n\n    return items.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching menu items: \", error);\n    return [];\n  }\n}\n\n// Category Actions\nexport async function addCategory(formData: FormData) {\n  const newCategory = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'categories'), newCategory);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add category.' };\n  }\n}\n\nexport async function getCategories(): Promise<Category[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'categories'));\n    const categories: Category[] = [];\n    querySnapshot.forEach((doc) => {\n      categories.push({ id: doc.id, ...doc.data() } as Category);\n    });\n    return categories.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching categories: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/users/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, Timestamp, doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { Member } from '@/lib/types';\n\nexport async function addUser(formData: FormData) {\n  const newUser: Omit<Member, 'id'> = {\n    name: formData.get('name') as string,\n    email: formData.get('email') as string,\n    phone: formData.get('phone') as string,\n    joined: new Date().toISOString(),\n    avatarUrl: 'https://placehold.co/100x100.png',\n    avatarHint: 'placeholder person',\n  };\n\n  try {\n    await addDoc(collection(db, 'members'), {\n      ...newUser,\n      joined: Timestamp.fromDate(new Date(newUser.joined)), // Store as Firestore Timestamp\n    });\n    revalidatePath('/admin/users');\n    revalidatePath('/');\n    revalidatePath('/members');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    if (e instanceof Error) {\n        return { success: false, error: e.message };\n    }\n    return { success: false, error: 'Failed to add user.' };\n  }\n}\n\nexport async function getUsers(): Promise<Member[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'members'));\n    const members: Member[] = [];\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      members.push({\n        id: doc.id,\n        name: data.name,\n        email: data.email,\n        phone: data.phone,\n        joined: (data.joined as Timestamp).toDate().toISOString(),\n        avatarUrl: data.avatarUrl,\n        avatarHint: data.avatarHint,\n      });\n    });\n    return members;\n  } catch (error) {\n    console.error(\"Error fetching users: \", error);\n    return [];\n  }\n}\n\nexport async function getMember(id: string): Promise<Member | null> {\n    try {\n        const docRef = doc(db, 'members', id);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            const data = docSnap.data();\n            return {\n                id: docSnap.id,\n                name: data.name,\n                email: data.email,\n                phone: data.phone,\n                joined: (data.joined as Timestamp).toDate().toISOString(),\n                avatarUrl: data.avatarUrl,\n                avatarHint: data.avatarHint,\n            };\n        } else {\n            console.log(\"No such document!\");\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Error fetching member: \", error);\n        return null;\n    }\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAAA;AACA;;;;;;;AAGO,eAAe,QAAQ,QAAkB;IAC9C,MAAM,UAA8B;QAClC,MAAM,SAAS,GAAG,CAAC;QACnB,OAAO,SAAS,GAAG,CAAC;QACpB,OAAO,SAAS,GAAG,CAAC;QACpB,QAAQ,IAAI,OAAO,WAAW;QAC9B,WAAW;QACX,YAAY;IACd;IAEA,IAAI;QACF,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,YAAY;YACtC,GAAG,OAAO;YACV,QAAQ,iKAAA,CAAA,YAAS,CAAC,QAAQ,CAAC,IAAI,KAAK,QAAQ,MAAM;QACpD;QACA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,2BAA2B;QACzC,IAAI,aAAa,OAAO;YACpB,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAAsB;IACxD;AACF;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QACnD,MAAM,UAAoB,EAAE;QAC5B,cAAc,OAAO,CAAC,CAAC;YACrB,MAAM,OAAO,IAAI,IAAI;YACrB,QAAQ,IAAI,CAAC;gBACX,IAAI,IAAI,EAAE;gBACV,MAAM,KAAK,IAAI;gBACf,OAAO,KAAK,KAAK;gBACjB,OAAO,KAAK,KAAK;gBACjB,QAAQ,AAAC,KAAK,MAAM,CAAe,MAAM,GAAG,WAAW;gBACvD,WAAW,KAAK,SAAS;gBACzB,YAAY,KAAK,UAAU;YAC7B;QACF;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,EAAE;IACX;AACF;AAEO,eAAe,UAAU,EAAU;IACtC,IAAI;QACA,MAAM,SAAS,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,WAAW;QAClC,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;QAE7B,IAAI,QAAQ,MAAM,IAAI;YAClB,MAAM,OAAO,QAAQ,IAAI;YACzB,OAAO;gBACH,IAAI,QAAQ,EAAE;gBACd,MAAM,KAAK,IAAI;gBACf,OAAO,KAAK,KAAK;gBACjB,OAAO,KAAK,KAAK;gBACjB,QAAQ,AAAC,KAAK,MAAM,CAAe,MAAM,GAAG,WAAW;gBACvD,WAAW,KAAK,SAAS;gBACzB,YAAY,KAAK,UAAU;YAC/B;QACJ,OAAO;YACH,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;IACX;AACJ;;;IA3EsB;IA4BA;IAuBA;;AAnDA,+OAAA;AA4BA,+OAAA;AAuBA,+OAAA","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pos/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, getDoc, Timestamp, query, orderBy, deleteDoc, updateDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { ActiveOrder, Check, OrderItem, OrderStatus } from '@/lib/types';\n\n// Check Actions\nexport async function getChecks(): Promise<Check[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'checks'));\n    const checks: Check[] = [];\n    querySnapshot.forEach((doc) => {\n      checks.push({ id: doc.id, ...doc.data() } as Check);\n    });\n    return checks.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching checks: \", error);\n    return [];\n  }\n}\n\nexport async function addCheck(check: Omit<Check, 'id'>): Promise<Check> {\n    const docRef = await addDoc(collection(db, 'checks'), check);\n    revalidatePath('/');\n    return { id: docRef.id, ...check };\n}\n\nexport async function updateCheck(checkId: string, updates: Partial<Omit<Check, 'id'>>) {\n  try {\n    const checkRef = doc(db, 'checks', checkId);\n    await updateDoc(checkRef, updates);\n    // No revalidate needed for this as it's a frequent action\n    return { success: true };\n  } catch (e) {\n    console.error(\"Error updating check: \", e);\n    return { success: false, error: 'Failed to update check.' };\n  }\n}\n\nexport async function deleteCheck(checkId: string) {\n    try {\n        await deleteDoc(doc(db, 'checks', checkId));\n        revalidatePath('/');\n        return { success: true };\n    } catch(e) {\n        console.error(\"Error deleting check: \", e);\n        return { success: false, error: 'Failed to delete check.' };\n    }\n}\n\n\n// Order Actions\nexport async function sendNewItemsToKitchen(checkId: string) {\n    try {\n        const checkRef = doc(db, 'checks', checkId);\n        const checkSnap = await getDoc(checkRef);\n        if (!checkSnap.exists()) {\n            return { success: false, error: 'Check not found.' };\n        }\n\n        const check = { id: checkSnap.id, ...checkSnap.data() } as Check;\n        \n        if (!check.orderType) {\n            return { success: false, error: 'Please select an order type first.' };\n        }\n\n        const newItems = check.items.filter(item => item.status === 'new');\n\n        if (newItems.length === 0) {\n            return { success: true, message: 'No new items to send.' };\n        }\n\n        // Create a new order with only the new items\n        const subtotal = newItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n        const tax = subtotal * 0.08; // TODO: get from settings\n        const total = subtotal + tax;\n        const totalPreparationTime = newItems.reduce((acc, item) => acc + (item.preparationTime || 5) * item.quantity, 0);\n\n        const newOrderData = {\n            items: newItems,\n            status: 'Preparing' as OrderStatus,\n            total: total,\n            createdAt: Timestamp.now(),\n            checkName: `${check.name} (Batch)`,\n            totalPreparationTime,\n            orderType: check.orderType,\n            tableNumber: check.tableNumber,\n            customerName: check.customerName,\n        };\n        await addDoc(collection(db, 'orders'), newOrderData);\n\n        // Update the original check items to 'sent'\n        const updatedItems = check.items.map(item => \n            item.status === 'new' ? { ...item, status: 'sent' as const } : item\n        );\n        await updateDoc(checkRef, { items: updatedItems });\n\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error(\"Error sending items to kitchen: \", e);\n        if (e instanceof Error) {\n          return { success: false, error: e.message };\n        }\n        return { success: false, error: 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function getOrders(): Promise<ActiveOrder[]> {\n  try {\n    const q = query(collection(db, 'orders'), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    const orders: ActiveOrder[] = [];\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      orders.push({\n        id: doc.id,\n        items: data.items,\n        status: data.status,\n        total: data.total,\n        checkName: data.checkName,\n        createdAt: (data.createdAt as Timestamp).toDate(),\n        totalPreparationTime: data.totalPreparationTime,\n        orderType: data.orderType,\n        tableNumber: data.tableNumber,\n        customerName: data.customerName,\n      });\n    });\n    return orders;\n  } catch (error) {\n    console.error(\"Error fetching orders: \", error);\n    return [];\n  }\n}\n\n\nexport async function addOrder(orderData: Omit<ActiveOrder, 'id' | 'createdAt'> & { createdAt: Date }) {\n    try {\n        await addDoc(collection(db, 'orders'), {\n            ...orderData,\n            createdAt: Timestamp.fromDate(orderData.createdAt),\n        });\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error(\"Error adding order: \", e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to add order.' };\n    }\n}\n\nexport async function updateOrderStatus(orderId: string, status: OrderStatus) {\n    try {\n        const orderRef = doc(db, 'orders', orderId);\n        await updateDoc(orderRef, { status });\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error(\"Error updating order status: \", e);\n        return { success: false, error: 'Failed to update order status.' };\n    }\n}\n\nexport async function deleteOrder(orderId: string) {\n    try {\n        await deleteDoc(doc(db, 'orders', orderId));\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error(\"Error deleting order: \", e);\n        return { success: false, error: 'Failed to delete order.' };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCategories as '00250df251d14c70356e11c41121848a2f36dad56d'} from 'ACTIONS_MODULE0'\nexport {getMenuItems as '005d27be1c353e62c14cdfbb8b42ccddcd8e2c5684'} from 'ACTIONS_MODULE0'\nexport {getUsers as '008168638a7391fac885b403e884437a33d75371a0'} from 'ACTIONS_MODULE1'\nexport {getChecks as '0031d44aa8a504decdf347af4c441fe28fc309c16c'} from 'ACTIONS_MODULE2'\nexport {addCheck as '40ccc18b1ac5d408902662a27ec7a65c308197f5a4'} from 'ACTIONS_MODULE2'\nexport {updateCheck as '6014df7684e63d49ae5980a6100673f0cd78459342'} from 'ACTIONS_MODULE2'\nexport {deleteCheck as '407e07aedb694a1d2d12f09703b764f79a4a2b5dc0'} from 'ACTIONS_MODULE2'\nexport {getOrders as '00a43ce77b0b9c08c0ca14fd356ccbfab4eba3feb0'} from 'ACTIONS_MODULE2'\nexport {addOrder as '40fe70b2dccbfc7c98046752200fba85f74bdea99c'} from 'ACTIONS_MODULE2'\nexport {deleteOrder as '40afa6f114ae8fde89d6a0b230ec72472d2ef1c650'} from 'ACTIONS_MODULE2'\nexport {updateOrderStatus as '60a580b3dbdc81412e7fdca83cd53162460270b88a'} from 'ACTIONS_MODULE2'\nexport {sendNewItemsToKitchen as '409db8b679714c8c9ef8f87f55c2f6873dd3886524'} from 'ACTIONS_MODULE2'\n"],"names":[],"mappings":";AAAA;AAEA;AACA","debugId":null}},
    {"offset": {"line": 740, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 754, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}