{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/tables/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { RestaurantTable } from '@/lib/types';\n\nexport async function addTable(formData: FormData) {\n  const newTable: Omit<RestaurantTable, 'id'> = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'tables'), newTable);\n    revalidatePath('/admin/tables');\n    revalidatePath('/'); // For POS\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding table: ', e);\n    if (e instanceof Error) {\n        return { success: false, error: e.message };\n    }\n    return { success: false, error: 'Failed to add table.' };\n  }\n}\n\nexport async function updateTable(id: string, formData: FormData) {\n    const tableUpdates = {\n        name: formData.get('name') as string,\n    };\n\n    try {\n        const tableRef = doc(db, 'tables', id);\n        await updateDoc(tableRef, tableUpdates);\n        revalidatePath('/admin/tables');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating table: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to update table.' };\n    }\n}\n\nexport async function deleteTable(id: string) {\n    try {\n        await deleteDoc(doc(db, 'tables', id));\n        revalidatePath('/admin/tables');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting table: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to delete table.' };\n    }\n}\n\nexport async function getTables(): Promise<RestaurantTable[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'tables'));\n    const tables: RestaurantTable[] = [];\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      tables.push({ \n        id: doc.id,\n        name: data.name,\n       } as RestaurantTable);\n    });\n    return tables.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching tables: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAGA;AACA;AAAA;AACA;;;;;;;AAGO,eAAe,SAAS,QAAkB;IAC/C,MAAM,WAAwC;QAC5C,MAAM,SAAS,GAAG,CAAC;IACrB;IAEA,IAAI;QACF,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,WAAW;QACvC,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,UAAU;QAC/B,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,wBAAwB;QACtC,IAAI,aAAa,OAAO;YACpB,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAAuB;IACzD;AACF;AAEO,eAAe,YAAY,EAAU,EAAE,QAAkB;IAC5D,MAAM,eAAe;QACjB,MAAM,SAAS,GAAG,CAAC;IACvB;IAEA,IAAI;QACA,MAAM,WAAW,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,UAAU;QACnC,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,UAAU;QAC1B,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC,0BAA0B;QACxC,IAAI,aAAa,OAAO;YACpB,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAA0B;IAC9D;AACJ;AAEO,eAAe,YAAY,EAAU;IACxC,IAAI;QACA,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,UAAU;QAClC,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC,0BAA0B;QACxC,IAAI,aAAa,OAAO;YACpB,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAA0B;IAC9D;AACJ;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QACnD,MAAM,SAA4B,EAAE;QACpC,cAAc,OAAO,CAAC,CAAC;YACrB,MAAM,OAAO,IAAI,IAAI;YACrB,OAAO,IAAI,CAAC;gBACV,IAAI,IAAI,EAAE;gBACV,MAAM,KAAK,IAAI;YAChB;QACH;QACA,OAAO,OAAO,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI;IAC1D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,EAAE;IACX;AACF;;;IAtEsB;IAmBA;IAoBA;IAeA;;AAtDA,+OAAA;AAmBA,+OAAA;AAoBA,+OAAA;AAeA,+OAAA","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/tables/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getTables as '00d9b3a10a35e11820272036ad786c27fd5b4e0d9c'} from 'ACTIONS_MODULE0'\nexport {deleteTable as '40bbe299f84d4fb9a9678c631df6737cda65cd3718'} from 'ACTIONS_MODULE0'\nexport {addTable as '40ff8e1cfff521ec6eb84f47d74f9f6a4352411810'} from 'ACTIONS_MODULE0'\nexport {updateTable as '601c7d6eebf44fe113706b7452a9e7ebeed1fd03e1'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/tables-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/tables-client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/tables-client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/tables-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/tables-client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/tables-client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/tables/page.tsx"],"sourcesContent":["\nimport TablesClient from \"@/components/admin/tables-client\";\nimport { getTables } from \"./actions\";\n\nexport default async function AdminTablesPage() {\n    const tables = await getTables();\n    return <TablesClient initialTables={tables} />;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAEe,eAAe;IAC1B,MAAM,SAAS,MAAM,CAAA,GAAA,wIAAA,CAAA,YAAS,AAAD;IAC7B,qBAAO,8OAAC,+IAAA,CAAA,UAAY;QAAC,eAAe;;;;;;AACxC","debugId":null}}]
}