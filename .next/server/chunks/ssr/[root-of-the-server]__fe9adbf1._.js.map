{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { MenuItem, Category } from '@/lib/types';\n\n// Menu Item Actions\nexport async function addMenuItem(formData: FormData) {\n  const ingredientsString = formData.get('ingredients') as string | null;\n\n  const newItemData: Omit<MenuItem, 'id'> = {\n    name: formData.get('name') as string,\n    description: formData.get('description') as string,\n    price: parseFloat(formData.get('price') as string),\n    category: formData.get('category') as string,\n    imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n    imageHint: 'food placeholder', // Simple hint for now\n    preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n    ingredients: ingredientsString ? ingredientsString.split(',').map(i => i.trim()).filter(Boolean) : [],\n  };\n\n  try {\n    await addDoc(collection(db, 'menuItems'), newItemData);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add menu item.' };\n  }\n}\n\nexport async function getMenuItems(): Promise<MenuItem[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'menuItems'));\n    const items: MenuItem[] = [];\n    querySnapshot.forEach((doc) => {\n      items.push({ id: doc.id, ...doc.data() } as MenuItem);\n    });\n    return items.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching menu items: \", error);\n    return [];\n  }\n}\n\n// Category Actions\nexport async function addCategory(formData: FormData) {\n  const newCategory = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'categories'), newCategory);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add category.' };\n  }\n}\n\nexport async function getCategories(): Promise<Category[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'categories'));\n    const categories: Category[] = [];\n    querySnapshot.forEach((doc) => {\n      categories.push({ id: doc.id, ...doc.data() } as Category);\n    });\n    return categories.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching categories: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/menu/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCategories as '00250df251d14c70356e11c41121848a2f36dad56d'} from 'ACTIONS_MODULE0'\nexport {getMenuItems as '005d27be1c353e62c14cdfbb8b42ccddcd8e2c5684'} from 'ACTIONS_MODULE0'\nexport {addCategory as '400429c5b6bcb909ddd2a39c11e5e1f030e8c92b27'} from 'ACTIONS_MODULE0'\nexport {addMenuItem as '401002fabdb1318c1d8692d2124063f7841de46d16'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/menu-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/menu-client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/menu-client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwS,GACrU,sEACA","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/menu-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/menu-client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/menu-client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/page.tsx"],"sourcesContent":["import MenuClient from \"@/components/admin/menu-client\";\nimport { getMenuItems, getCategories } from \"./actions\";\n\nexport default async function AdminMenuPage() {\n    const menuItems = await getMenuItems();\n    const categories = await getCategories();\n\n    return (\n       <MenuClient initialMenuItems={menuItems} initialCategories={categories} />\n    );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,eAAe;IAC1B,MAAM,YAAY,MAAM,CAAA,GAAA,sIAAA,CAAA,eAAY,AAAD;IACnC,MAAM,aAAa,MAAM,CAAA,GAAA,sIAAA,CAAA,gBAAa,AAAD;IAErC,qBACG,8OAAC,6IAAA,CAAA,UAAU;QAAC,kBAAkB;QAAW,mBAAmB;;;;;;AAEnE","debugId":null}}]
}