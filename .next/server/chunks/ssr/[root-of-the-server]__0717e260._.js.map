{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/employees/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, Timestamp } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { Employee } from '@/lib/types';\n\nexport async function addEmployee(formData: FormData) {\n  const newEmployee: Omit<Employee, 'id'> = {\n    name: formData.get('name') as string,\n    email: formData.get('email') as string,\n    role: formData.get('role') as 'Manager' | 'Server' | 'Chef',\n    startDate: new Date().toISOString(),\n  };\n\n  try {\n    await addDoc(collection(db, 'employees'), {\n      ...newEmployee,\n      startDate: Timestamp.fromDate(new Date(newEmployee.startDate)),\n    });\n    revalidatePath('/admin/employees');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    if (e instanceof Error) {\n        return { success: false, error: e.message };\n    }\n    return { success: false, error: 'Failed to add employee.' };\n  }\n}\n\nexport async function getEmployees(): Promise<Employee[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'employees'));\n    const employees: Employee[] = [];\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      employees.push({\n        id: doc.id,\n        name: data.name,\n        email: data.email,\n        role: data.role,\n        startDate: (data.startDate as Timestamp).toDate().toISOString(),\n      });\n    });\n    return employees.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching employees: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAAA;AACA;;;;;;;AAGO,eAAe,YAAY,QAAkB;IAClD,MAAM,cAAoC;QACxC,MAAM,SAAS,GAAG,CAAC;QACnB,OAAO,SAAS,GAAG,CAAC;QACpB,MAAM,SAAS,GAAG,CAAC;QACnB,WAAW,IAAI,OAAO,WAAW;IACnC;IAEA,IAAI;QACF,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,cAAc;YACxC,GAAG,WAAW;YACd,WAAW,iKAAA,CAAA,YAAS,CAAC,QAAQ,CAAC,IAAI,KAAK,YAAY,SAAS;QAC9D;QACA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,2BAA2B;QACzC,IAAI,aAAa,OAAO;YACpB,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAA0B;IAC5D;AACF;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QACnD,MAAM,YAAwB,EAAE;QAChC,cAAc,OAAO,CAAC,CAAC;YACrB,MAAM,OAAO,IAAI,IAAI;YACrB,UAAU,IAAI,CAAC;gBACb,IAAI,IAAI,EAAE;gBACV,MAAM,KAAK,IAAI;gBACf,OAAO,KAAK,KAAK;gBACjB,MAAM,KAAK,IAAI;gBACf,WAAW,AAAC,KAAK,SAAS,CAAe,MAAM,GAAG,WAAW;YAC/D;QACF;QACA,OAAO,UAAU,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI;IAC7D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,EAAE;IACX;AACF;;;IA3CsB;IAwBA;;AAxBA,+OAAA;AAwBA,+OAAA","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/employees/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getEmployees as '00ef513e14fbbab46385c502c407b9cb3106e1dfa3'} from 'ACTIONS_MODULE0'\nexport {addEmployee as '40e953280be8eec1e87a8d3007c03d773f51b0b565'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/employees-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/employees-client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/employees-client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6S,GAC1U,2EACA","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/employees-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/employees-client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/employees-client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/employees/page.tsx"],"sourcesContent":["import EmployeesClient from \"@/components/admin/employees-client\";\nimport { getEmployees } from \"./actions\";\n\nexport default async function AdminEmployeesPage() {\n    const employees = await getEmployees();\n    return <EmployeesClient initialEmployees={employees} />;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,eAAe;IAC1B,MAAM,YAAY,MAAM,CAAA,GAAA,2IAAA,CAAA,eAAY,AAAD;IACnC,qBAAO,8OAAC,kJAAA,CAAA,UAAe;QAAC,kBAAkB;;;;;;AAC9C","debugId":null}}]
}