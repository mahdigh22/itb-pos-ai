{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 752, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/settings/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { doc, getDoc, setDoc, updateDoc, arrayUnion } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { PriceList } from '@/lib/types';\n\nconst SETTINGS_COLLECTION = 'settings';\nconst MAIN_SETTINGS_DOC = 'main';\n\ninterface Settings {\n    taxRate: number;\n    priceLists: PriceList[];\n    activePriceListId?: string;\n}\n\nexport async function getSettings(): Promise<Settings> {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            return docSnap.data() as Settings;\n        } else {\n            // Default settings if document doesn't exist\n            const defaultSettings: Settings = {\n                taxRate: 8.0,\n                priceLists: [\n                    { id: 'pl-1', name: 'Default', discount: 0 },\n                    { id: 'pl-2', name: 'Happy Hour', discount: 20 },\n                    { id: 'pl-3', name: 'Employee Discount', discount: 50 },\n                ],\n                activePriceListId: 'pl-1',\n            };\n            await setDoc(docRef, defaultSettings);\n            return defaultSettings;\n        }\n    } catch (error) {\n        console.error(\"Error fetching settings: \", error);\n        // Fallback to default settings on error\n        return { taxRate: 8.0, priceLists: [], activePriceListId: undefined };\n    }\n}\n\nexport async function saveTaxRate(newRate: number) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { taxRate: newRate });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving tax rate: \", error);\n        return { success: false, error: 'Failed to save tax rate.' };\n    }\n}\n\nexport async function saveActivePriceList(priceListId: string | null) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { activePriceListId: priceListId || null });\n        revalidatePath('/admin/settings');\n        revalidatePath('/'); // For POS\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving active price list: \", error);\n        return { success: false, error: 'Failed to save active price list.' };\n    }\n}\n\nexport async function addPriceList(formData: FormData) {\n    const newPriceList: PriceList = {\n        id: `pl-${Date.now()}`,\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, {\n            priceLists: arrayUnion(newPriceList)\n        });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error adding price list: \", error);\n        return { success: false, error: 'Failed to add price list.' };\n    }\n}\n\nexport async function updatePriceList(id: string, formData: FormData) {\n    const updatedPriceList: Partial<PriceList> = {\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.map(pl => \n            pl.id === id ? { ...pl, ...updatedPriceList } : pl\n        );\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { priceLists: updatedPriceLists });\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error updating price list: \", error);\n        return { success: false, error: 'Failed to update price list.' };\n    }\n}\n\nexport async function deletePriceList(id: string) {\n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.filter(pl => pl.id !== id);\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        \n        const updateData: { priceLists: PriceList[], activePriceListId?: string | null } = {\n            priceLists: updatedPriceLists\n        };\n\n        // If the deleted price list was the active one, reset it.\n        if (settings.activePriceListId === id) {\n            updateData.activePriceListId = null;\n        }\n\n        await updateDoc(docRef, updateData);\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting price list: \", error);\n        return { success: false, error: 'Failed to delete price list.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;IA4CsB,cAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/settings/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { doc, getDoc, setDoc, updateDoc, arrayUnion } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { PriceList } from '@/lib/types';\n\nconst SETTINGS_COLLECTION = 'settings';\nconst MAIN_SETTINGS_DOC = 'main';\n\ninterface Settings {\n    taxRate: number;\n    priceLists: PriceList[];\n    activePriceListId?: string;\n}\n\nexport async function getSettings(): Promise<Settings> {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            return docSnap.data() as Settings;\n        } else {\n            // Default settings if document doesn't exist\n            const defaultSettings: Settings = {\n                taxRate: 8.0,\n                priceLists: [\n                    { id: 'pl-1', name: 'Default', discount: 0 },\n                    { id: 'pl-2', name: 'Happy Hour', discount: 20 },\n                    { id: 'pl-3', name: 'Employee Discount', discount: 50 },\n                ],\n                activePriceListId: 'pl-1',\n            };\n            await setDoc(docRef, defaultSettings);\n            return defaultSettings;\n        }\n    } catch (error) {\n        console.error(\"Error fetching settings: \", error);\n        // Fallback to default settings on error\n        return { taxRate: 8.0, priceLists: [], activePriceListId: undefined };\n    }\n}\n\nexport async function saveTaxRate(newRate: number) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { taxRate: newRate });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving tax rate: \", error);\n        return { success: false, error: 'Failed to save tax rate.' };\n    }\n}\n\nexport async function saveActivePriceList(priceListId: string | null) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { activePriceListId: priceListId || null });\n        revalidatePath('/admin/settings');\n        revalidatePath('/'); // For POS\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving active price list: \", error);\n        return { success: false, error: 'Failed to save active price list.' };\n    }\n}\n\nexport async function addPriceList(formData: FormData) {\n    const newPriceList: PriceList = {\n        id: `pl-${Date.now()}`,\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, {\n            priceLists: arrayUnion(newPriceList)\n        });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error adding price list: \", error);\n        return { success: false, error: 'Failed to add price list.' };\n    }\n}\n\nexport async function updatePriceList(id: string, formData: FormData) {\n    const updatedPriceList: Partial<PriceList> = {\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.map(pl => \n            pl.id === id ? { ...pl, ...updatedPriceList } : pl\n        );\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { priceLists: updatedPriceLists });\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error updating price list: \", error);\n        return { success: false, error: 'Failed to update price list.' };\n    }\n}\n\nexport async function deletePriceList(id: string) {\n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.filter(pl => pl.id !== id);\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        \n        const updateData: { priceLists: PriceList[], activePriceListId?: string | null } = {\n            priceLists: updatedPriceLists\n        };\n\n        // If the deleted price list was the active one, reset it.\n        if (settings.activePriceListId === id) {\n            updateData.activePriceListId = null;\n        }\n\n        await updateDoc(docRef, updateData);\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting price list: \", error);\n        return { success: false, error: 'Failed to delete price list.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAqEsB,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/settings/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { doc, getDoc, setDoc, updateDoc, arrayUnion } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { PriceList } from '@/lib/types';\n\nconst SETTINGS_COLLECTION = 'settings';\nconst MAIN_SETTINGS_DOC = 'main';\n\ninterface Settings {\n    taxRate: number;\n    priceLists: PriceList[];\n    activePriceListId?: string;\n}\n\nexport async function getSettings(): Promise<Settings> {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            return docSnap.data() as Settings;\n        } else {\n            // Default settings if document doesn't exist\n            const defaultSettings: Settings = {\n                taxRate: 8.0,\n                priceLists: [\n                    { id: 'pl-1', name: 'Default', discount: 0 },\n                    { id: 'pl-2', name: 'Happy Hour', discount: 20 },\n                    { id: 'pl-3', name: 'Employee Discount', discount: 50 },\n                ],\n                activePriceListId: 'pl-1',\n            };\n            await setDoc(docRef, defaultSettings);\n            return defaultSettings;\n        }\n    } catch (error) {\n        console.error(\"Error fetching settings: \", error);\n        // Fallback to default settings on error\n        return { taxRate: 8.0, priceLists: [], activePriceListId: undefined };\n    }\n}\n\nexport async function saveTaxRate(newRate: number) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { taxRate: newRate });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving tax rate: \", error);\n        return { success: false, error: 'Failed to save tax rate.' };\n    }\n}\n\nexport async function saveActivePriceList(priceListId: string | null) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { activePriceListId: priceListId || null });\n        revalidatePath('/admin/settings');\n        revalidatePath('/'); // For POS\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving active price list: \", error);\n        return { success: false, error: 'Failed to save active price list.' };\n    }\n}\n\nexport async function addPriceList(formData: FormData) {\n    const newPriceList: PriceList = {\n        id: `pl-${Date.now()}`,\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, {\n            priceLists: arrayUnion(newPriceList)\n        });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error adding price list: \", error);\n        return { success: false, error: 'Failed to add price list.' };\n    }\n}\n\nexport async function updatePriceList(id: string, formData: FormData) {\n    const updatedPriceList: Partial<PriceList> = {\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.map(pl => \n            pl.id === id ? { ...pl, ...updatedPriceList } : pl\n        );\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { priceLists: updatedPriceLists });\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error updating price list: \", error);\n        return { success: false, error: 'Failed to update price list.' };\n    }\n}\n\nexport async function deletePriceList(id: string) {\n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.filter(pl => pl.id !== id);\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        \n        const updateData: { priceLists: PriceList[], activePriceListId?: string | null } = {\n            priceLists: updatedPriceLists\n        };\n\n        // If the deleted price list was the active one, reset it.\n        if (settings.activePriceListId === id) {\n            updateData.activePriceListId = null;\n        }\n\n        await updateDoc(docRef, updateData);\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting price list: \", error);\n        return { success: false, error: 'Failed to delete price list.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAyFsB,kBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 791, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/settings/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { doc, getDoc, setDoc, updateDoc, arrayUnion } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { PriceList } from '@/lib/types';\n\nconst SETTINGS_COLLECTION = 'settings';\nconst MAIN_SETTINGS_DOC = 'main';\n\ninterface Settings {\n    taxRate: number;\n    priceLists: PriceList[];\n    activePriceListId?: string;\n}\n\nexport async function getSettings(): Promise<Settings> {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            return docSnap.data() as Settings;\n        } else {\n            // Default settings if document doesn't exist\n            const defaultSettings: Settings = {\n                taxRate: 8.0,\n                priceLists: [\n                    { id: 'pl-1', name: 'Default', discount: 0 },\n                    { id: 'pl-2', name: 'Happy Hour', discount: 20 },\n                    { id: 'pl-3', name: 'Employee Discount', discount: 50 },\n                ],\n                activePriceListId: 'pl-1',\n            };\n            await setDoc(docRef, defaultSettings);\n            return defaultSettings;\n        }\n    } catch (error) {\n        console.error(\"Error fetching settings: \", error);\n        // Fallback to default settings on error\n        return { taxRate: 8.0, priceLists: [], activePriceListId: undefined };\n    }\n}\n\nexport async function saveTaxRate(newRate: number) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { taxRate: newRate });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving tax rate: \", error);\n        return { success: false, error: 'Failed to save tax rate.' };\n    }\n}\n\nexport async function saveActivePriceList(priceListId: string | null) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { activePriceListId: priceListId || null });\n        revalidatePath('/admin/settings');\n        revalidatePath('/'); // For POS\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving active price list: \", error);\n        return { success: false, error: 'Failed to save active price list.' };\n    }\n}\n\nexport async function addPriceList(formData: FormData) {\n    const newPriceList: PriceList = {\n        id: `pl-${Date.now()}`,\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, {\n            priceLists: arrayUnion(newPriceList)\n        });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error adding price list: \", error);\n        return { success: false, error: 'Failed to add price list.' };\n    }\n}\n\nexport async function updatePriceList(id: string, formData: FormData) {\n    const updatedPriceList: Partial<PriceList> = {\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.map(pl => \n            pl.id === id ? { ...pl, ...updatedPriceList } : pl\n        );\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { priceLists: updatedPriceLists });\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error updating price list: \", error);\n        return { success: false, error: 'Failed to update price list.' };\n    }\n}\n\nexport async function deletePriceList(id: string) {\n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.filter(pl => pl.id !== id);\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        \n        const updateData: { priceLists: PriceList[], activePriceListId?: string | null } = {\n            priceLists: updatedPriceLists\n        };\n\n        // If the deleted price list was the active one, reset it.\n        if (settings.activePriceListId === id) {\n            updateData.activePriceListId = null;\n        }\n\n        await updateDoc(docRef, updateData);\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting price list: \", error);\n        return { success: false, error: 'Failed to delete price list.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAgHsB,kBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 804, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/settings/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { doc, getDoc, setDoc, updateDoc, arrayUnion } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { PriceList } from '@/lib/types';\n\nconst SETTINGS_COLLECTION = 'settings';\nconst MAIN_SETTINGS_DOC = 'main';\n\ninterface Settings {\n    taxRate: number;\n    priceLists: PriceList[];\n    activePriceListId?: string;\n}\n\nexport async function getSettings(): Promise<Settings> {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            return docSnap.data() as Settings;\n        } else {\n            // Default settings if document doesn't exist\n            const defaultSettings: Settings = {\n                taxRate: 8.0,\n                priceLists: [\n                    { id: 'pl-1', name: 'Default', discount: 0 },\n                    { id: 'pl-2', name: 'Happy Hour', discount: 20 },\n                    { id: 'pl-3', name: 'Employee Discount', discount: 50 },\n                ],\n                activePriceListId: 'pl-1',\n            };\n            await setDoc(docRef, defaultSettings);\n            return defaultSettings;\n        }\n    } catch (error) {\n        console.error(\"Error fetching settings: \", error);\n        // Fallback to default settings on error\n        return { taxRate: 8.0, priceLists: [], activePriceListId: undefined };\n    }\n}\n\nexport async function saveTaxRate(newRate: number) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { taxRate: newRate });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving tax rate: \", error);\n        return { success: false, error: 'Failed to save tax rate.' };\n    }\n}\n\nexport async function saveActivePriceList(priceListId: string | null) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { activePriceListId: priceListId || null });\n        revalidatePath('/admin/settings');\n        revalidatePath('/'); // For POS\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving active price list: \", error);\n        return { success: false, error: 'Failed to save active price list.' };\n    }\n}\n\nexport async function addPriceList(formData: FormData) {\n    const newPriceList: PriceList = {\n        id: `pl-${Date.now()}`,\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, {\n            priceLists: arrayUnion(newPriceList)\n        });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error adding price list: \", error);\n        return { success: false, error: 'Failed to add price list.' };\n    }\n}\n\nexport async function updatePriceList(id: string, formData: FormData) {\n    const updatedPriceList: Partial<PriceList> = {\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.map(pl => \n            pl.id === id ? { ...pl, ...updatedPriceList } : pl\n        );\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { priceLists: updatedPriceLists });\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error updating price list: \", error);\n        return { success: false, error: 'Failed to update price list.' };\n    }\n}\n\nexport async function deletePriceList(id: string) {\n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.filter(pl => pl.id !== id);\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        \n        const updateData: { priceLists: PriceList[], activePriceListId?: string | null } = {\n            priceLists: updatedPriceLists\n        };\n\n        // If the deleted price list was the active one, reset it.\n        if (settings.activePriceListId === id) {\n            updateData.activePriceListId = null;\n        }\n\n        await updateDoc(docRef, updateData);\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting price list: \", error);\n        return { success: false, error: 'Failed to delete price list.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAwDsB,sBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 817, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 944, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/settings-client.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useOptimistic } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { PlusCircle, MoreHorizontal, Trash2, Edit } from \"lucide-react\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\nimport { useToast } from '@/hooks/use-toast';\nimport { saveTaxRate, addPriceList, updatePriceList, deletePriceList, saveActivePriceList } from '@/app/admin/settings/actions';\nimport type { PriceList } from '@/lib/types';\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogDescription } from \"@/components/ui/alert-dialog\";\n\ninterface SettingsClientProps {\n    initialTaxRate: number;\n    initialPriceLists: PriceList[];\n    initialActivePriceListId?: string;\n}\n\nfunction PriceListForm({ priceList, onFormSubmit, onCancel }) {\n    return (\n        <form action={onFormSubmit} className=\"space-y-4\">\n            <input type=\"hidden\" name=\"id\" value={priceList?.id || ''} />\n            <div className=\"space-y-2\"><Label htmlFor=\"pl-name\">Price List Name</Label><Input id=\"pl-name\" name=\"name\" placeholder=\"e.g. VIP Members\" required defaultValue={priceList?.name}/></div>\n            <div className=\"space-y-2\"><Label htmlFor=\"pl-discount\">Discount (%)</Label><Input id=\"pl-discount\" name=\"discount\" type=\"number\" placeholder=\"15\" required defaultValue={priceList?.discount} /></div>\n            <DialogFooter>\n                <Button type=\"button\" variant=\"outline\" onClick={onCancel}>Cancel</Button>\n                <Button type=\"submit\">{priceList ? 'Save Changes' : 'Add Price List'}</Button>\n            </DialogFooter>\n        </form>\n    );\n}\n\nexport default function SettingsClient({ initialTaxRate, initialPriceLists, initialActivePriceListId }: SettingsClientProps) {\n    const { toast } = useToast();\n    const [taxRate, setTaxRate] = useState(initialTaxRate);\n    const [isSavingTax, setIsSavingTax] = useState(false);\n    const [activePriceListId, setActivePriceListId] = useState(initialActivePriceListId);\n    \n    const [isAddDialogOpen, setAddDialogOpen] = useState(false);\n    const [editingPriceList, setEditingPriceList] = useState<PriceList | null>(null);\n    const [deletingPriceList, setDeletingPriceList] = useState<PriceList | null>(null);\n\n    const [optimisticPriceLists, manageOptimisticPriceLists] = useOptimistic<PriceList[], {action: 'add' | 'delete', priceList: PriceList}>(\n        initialPriceLists,\n        (state, { action, priceList }) => {\n            switch(action) {\n                case 'add': return [...state, priceList];\n                case 'delete': return state.filter(pl => pl.id !== priceList.id);\n                default: return state;\n            }\n        }\n    );\n\n    const handleSaveTax = async () => {\n        setIsSavingTax(true);\n        const result = await saveTaxRate(taxRate);\n        if (result.success) {\n            toast({ title: 'Settings Saved', description: 'Tax rate has been updated.' });\n        } else {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n            setTaxRate(initialTaxRate); // Revert on error\n        }\n        setIsSavingTax(false);\n    };\n\n    const handleActivePriceListChange = async (newId: string) => {\n        const finalId = newId === 'none' ? null : newId;\n        setActivePriceListId(finalId ?? undefined); // Optimistic UI update\n        const result = await saveActivePriceList(finalId);\n        if (result.success) {\n            toast({ title: 'Settings Saved', description: 'Active price list has been updated.' });\n        } else {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n            setActivePriceListId(initialActivePriceListId); // Revert on error\n        }\n    };\n\n    const handleAddPriceList = async (formData: FormData) => {\n        const newPriceList: PriceList = {\n            id: `optimistic-pl-${Date.now()}`,\n            name: formData.get('name') as string,\n            discount: parseFloat(formData.get('discount') as string),\n        };\n        manageOptimisticPriceLists({ action: 'add', priceList: newPriceList });\n        setAddDialogOpen(false);\n\n        const result = await addPriceList(formData);\n        if (!result.success) {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        } else {\n            toast({ title: 'Price List Added' });\n        }\n    };\n    \n    const handleEditPriceList = async (formData: FormData) => {\n        if (!editingPriceList) return;\n        setEditingPriceList(null);\n        const result = await updatePriceList(editingPriceList.id, formData);\n        if (!result.success) {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        } else {\n            toast({ title: 'Price List Updated' });\n        }\n    };\n    \n    const handleDeletePriceList = async () => {\n        if (!deletingPriceList) return;\n        manageOptimisticPriceLists({ action: 'delete', priceList: deletingPriceList });\n        setDeletingPriceList(null);\n        const result = await deletePriceList(deletingPriceList.id);\n        if (!result.success) {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        } else {\n            toast({ title: 'Price List Deleted' });\n        }\n    };\n\n\n    return (\n        <div className=\"space-y-6\">\n             <div>\n                <h1 className=\"text-3xl font-bold font-headline\">System Settings</h1>\n                <p className=\"text-muted-foreground\">Manage general application settings from the database.</p>\n            </div>\n            <Card>\n                <CardHeader>\n                    <CardTitle>Taxes & Defaults</CardTitle>\n                    <CardDescription>Manage tax rates and default price lists for new checks.</CardDescription>\n                </CardHeader>\n                <CardContent className=\"grid md:grid-cols-2 gap-8\">\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"tax-rate\">Default Tax Rate (%)</Label>\n                        <Input \n                            id=\"tax-rate\" \n                            type=\"number\" \n                            value={taxRate} \n                            onChange={(e) => setTaxRate(parseFloat(e.target.value) || 0)} \n                        />\n                         <Button className=\"mt-2\" onClick={handleSaveTax} disabled={isSavingTax}>\n                            {isSavingTax ? 'Saving...' : 'Save Tax Rate'}\n                        </Button>\n                    </div>\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"active-price-list\">Default Price List for New Checks</Label>\n                        <Select\n                            value={activePriceListId || 'none'}\n                            onValueChange={handleActivePriceListChange}\n                        >\n                            <SelectTrigger id=\"active-price-list\">\n                                <SelectValue placeholder=\"Select a default...\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                                <SelectItem value=\"none\">None (No Discount)</SelectItem>\n                                {optimisticPriceLists.map((pl) => (\n                                    <SelectItem key={pl.id} value={pl.id}>\n                                        {pl.name} ({pl.discount}%)\n                                    </SelectItem>\n                                ))}\n                            </SelectContent>\n                        </Select>\n                    </div>\n                </CardContent>\n            </Card>\n            <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between\">\n                    <div>\n                        <CardTitle>Manage Price Lists</CardTitle>\n                        <CardDescription>Create or edit price lists (e.g., Happy Hour, Employee Discount).</CardDescription>\n                    </div>\n                    <Button variant=\"outline\" onClick={() => setAddDialogOpen(true)}><PlusCircle className=\"mr-2 h-4 w-4\" /> Add Price List</Button>\n                </CardHeader>\n                <CardContent>\n                   <Table>\n                        <TableHeader><TableRow><TableHead>Name</TableHead><TableHead>Discount</TableHead><TableHead><span className=\"sr-only\">Actions</span></TableHead></TableRow></TableHeader>\n                        <TableBody>\n                            {optimisticPriceLists.map((pl) => (\n                                <TableRow key={pl.id}>\n                                    <TableCell className=\"font-medium\">{pl.name}</TableCell>\n                                    <TableCell>{pl.discount}%</TableCell>\n                                    <TableCell className=\"text-right\">\n                                        <DropdownMenu>\n                                            <DropdownMenuTrigger asChild><Button variant=\"ghost\" className=\"h-8 w-8 p-0\"><MoreHorizontal className=\"h-4 w-4\" /></Button></DropdownMenuTrigger>\n                                            <DropdownMenuContent align=\"end\">\n                                                <DropdownMenuItem onClick={() => setEditingPriceList(pl)}><Edit className=\"mr-2 h-4 w-4\"/> Edit</DropdownMenuItem>\n                                                <DropdownMenuItem className=\"text-destructive\" onClick={() => setDeletingPriceList(pl)}><Trash2 className=\"mr-2 h-4 w-4\"/> Delete</DropdownMenuItem>\n                                            </DropdownMenuContent>\n                                        </DropdownMenu>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                   </Table>\n                </CardContent>\n            </Card>\n\n            <Dialog open={isAddDialogOpen} onOpenChange={setAddDialogOpen}>\n                <DialogContent className=\"sm:max-w-sm\">\n                    <DialogHeader><DialogTitle>Add New Price List</DialogTitle></DialogHeader>\n                    <PriceListForm onFormSubmit={handleAddPriceList} onCancel={() => setAddDialogOpen(false)} />\n                </DialogContent>\n            </Dialog>\n\n            <Dialog open={!!editingPriceList} onOpenChange={(isOpen) => !isOpen && setEditingPriceList(null)}>\n                <DialogContent className=\"sm:max-w-sm\">\n                    <DialogHeader><DialogTitle>Edit Price List</DialogTitle></DialogHeader>\n                    <PriceListForm priceList={editingPriceList} onFormSubmit={handleEditPriceList} onCancel={() => setEditingPriceList(null)} />\n                </DialogContent>\n            </Dialog>\n            \n            <AlertDialog open={!!deletingPriceList} onOpenChange={(isOpen) => !isOpen && setDeletingPriceList(null)}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                        <AlertDialogDescription>\n                            This will permanently delete the price list: <span className=\"font-bold\">{deletingPriceList?.name}</span>.\n                        </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Cancel</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleDeletePriceList}>Delete</AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}