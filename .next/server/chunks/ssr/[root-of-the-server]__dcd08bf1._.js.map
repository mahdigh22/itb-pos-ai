{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { MenuItem, Category, Ingredient } from '@/lib/types';\n\n// Menu Item Actions\nexport async function addMenuItem(formData: FormData) {\n  const ingredientLinksString = formData.get('ingredientLinks') as string;\n  const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n  const newItemData: Omit<MenuItem, 'id' | 'cost'> = {\n    name: formData.get('name') as string,\n    description: formData.get('description') as string,\n    price: parseFloat(formData.get('price') as string),\n    category: formData.get('category') as string,\n    imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n    imageHint: 'food placeholder',\n    preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n    ingredientLinks: ingredientLinks,\n  };\n\n  try {\n    await addDoc(collection(db, 'menuItems'), newItemData);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add menu item.' };\n  }\n}\n\nexport async function updateMenuItem(id: string, formData: FormData) {\n    const ingredientLinksString = formData.get('ingredientLinks') as string;\n    const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n    const itemUpdates = {\n        name: formData.get('name') as string,\n        description: formData.get('description') as string,\n        price: parseFloat(formData.get('price') as string),\n        category: formData.get('category') as string,\n        imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n        preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n        ingredientLinks: ingredientLinks,\n    };\n    \n    try {\n        await updateDoc(doc(db, 'menuItems', id), itemUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update menu item.' };\n    }\n}\n\nexport async function deleteMenuItem(id: string) {\n    try {\n        await deleteDoc(doc(db, 'menuItems', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete menu item.' };\n    }\n}\n\n\nexport async function getMenuItems(): Promise<MenuItem[]> {\n  try {\n    const [menuItemsSnapshot, ingredientsSnapshot] = await Promise.all([\n        getDocs(collection(db, 'menuItems')),\n        getDocs(collection(db, 'ingredients'))\n    ]);\n\n    const ingredientsMap = new Map<string, Ingredient>();\n    ingredientsSnapshot.forEach(doc => {\n        const data = doc.data();\n        ingredientsMap.set(doc.id, { \n          id: doc.id,\n          name: data.name,\n          stock: data.stock || 0,\n          unit: data.unit || 'units',\n          cost: data.cost || 0,\n        } as Ingredient);\n    });\n\n    const items: MenuItem[] = [];\n    menuItemsSnapshot.forEach((doc) => {\n      const data = doc.data();\n      const menuItem = { id: doc.id, ...data } as MenuItem;\n      \n      let calculatedCost = 0;\n\n      // Resolve ingredient links\n      if (menuItem.ingredientLinks) {\n          menuItem.ingredients = menuItem.ingredientLinks\n            .map(link => {\n                const ingredient = ingredientsMap.get(link.ingredientId);\n                if (ingredient) {\n                    calculatedCost += (ingredient.cost || 0) * (link.quantity || 0);\n                    return { \n                      ...ingredient, \n                      isOptional: link.isOptional, \n                      quantity: link.quantity || 1, // Default quantity to 1 if not specified\n                    };\n                }\n                return null;\n            })\n            .filter(Boolean) as MenuItem['ingredients'];\n      }\n      \n      menuItem.cost = calculatedCost;\n      items.push(menuItem);\n    });\n\n    return items.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching menu items: \", error);\n    return [];\n  }\n}\n\n// Category Actions\nexport async function addCategory(formData: FormData) {\n  const newCategory = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'categories'), newCategory);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add category.' };\n  }\n}\n\n\nexport async function updateCategory(id: string, formData: FormData) {\n    const categoryUpdates = {\n        name: formData.get('name') as string,\n    };\n    try {\n        await updateDoc(doc(db, 'categories', id), categoryUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update category.' };\n    }\n}\n\nexport async function deleteCategory(id: string) {\n    try {\n        // TODO: Add logic to handle menu items in this category\n        await deleteDoc(doc(db, 'categories', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete category.' };\n    }\n}\n\n\nexport async function getCategories(): Promise<Category[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'categories'));\n    const categories: Category[] = [];\n    querySnapshot.forEach((doc) => {\n      categories.push({ id: doc.id, ...doc.data() } as Category);\n    });\n    return categories.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching categories: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/extras/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { Extra } from '@/lib/types';\n\nexport async function addExtra(formData: FormData) {\n  const newExtra: Omit<Extra, 'id'> = {\n    name: formData.get('name') as string,\n    price: parseFloat(formData.get('price') as string) || 0,\n  };\n\n  try {\n    await addDoc(collection(db, 'extras'), newExtra);\n    revalidatePath('/admin/extras');\n    revalidatePath('/'); // Revalidate POS page as it uses extras\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding extra: ', e);\n    if (e instanceof Error) {\n        return { success: false, error: e.message };\n    }\n    return { success: false, error: 'Failed to add extra.' };\n  }\n}\n\nexport async function updateExtra(id: string, formData: FormData) {\n    const extraUpdates = {\n        name: formData.get('name') as string,\n        price: parseFloat(formData.get('price') as string) || 0,\n    };\n\n    try {\n        const extraRef = doc(db, 'extras', id);\n        await updateDoc(extraRef, extraUpdates);\n        revalidatePath('/admin/extras');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating extra: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to update extra.' };\n    }\n}\n\nexport async function deleteExtra(id: string) {\n    try {\n        await deleteDoc(doc(db, 'extras', id));\n        revalidatePath('/admin/extras');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting extra: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to delete extra.' };\n    }\n}\n\n\nexport async function getExtras(): Promise<Extra[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'extras'));\n    const extras: Extra[] = [];\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      extras.push({ \n        id: doc.id,\n        name: data.name,\n        price: data.price || 0,\n       } as Extra);\n    });\n    return extras.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching extras: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/users/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, Timestamp, doc, getDoc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { Member } from '@/lib/types';\n\nexport async function addUser(formData: FormData) {\n  const newUser: Omit<Member, 'id'> = {\n    name: formData.get('name') as string,\n    email: formData.get('email') as string,\n    phone: formData.get('phone') as string,\n    joined: new Date().toISOString(),\n    avatarUrl: 'https://placehold.co/100x100.png',\n    avatarHint: 'placeholder person',\n  };\n\n  try {\n    await addDoc(collection(db, 'members'), {\n      ...newUser,\n      joined: Timestamp.fromDate(new Date(newUser.joined)), // Store as Firestore Timestamp\n    });\n    revalidatePath('/admin/users');\n    revalidatePath('/');\n    revalidatePath('/members');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    if (e instanceof Error) {\n        return { success: false, error: e.message };\n    }\n    return { success: false, error: 'Failed to add user.' };\n  }\n}\n\nexport async function updateUser(id: string, formData: FormData) {\n    const userUpdates = {\n        name: formData.get('name') as string,\n        email: formData.get('email') as string,\n        phone: formData.get('phone') as string,\n    };\n\n    try {\n        const userRef = doc(db, 'members', id);\n        await updateDoc(userRef, userUpdates);\n        revalidatePath('/admin/users');\n        revalidatePath('/');\n        revalidatePath('/members');\n        revalidatePath(`/members/${id}`);\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to update user.' };\n    }\n}\n\nexport async function deleteUser(id: string) {\n    try {\n        await deleteDoc(doc(db, 'members', id));\n        revalidatePath('/admin/users');\n        revalidatePath('/');\n        revalidatePath('/members');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to delete user.' };\n    }\n}\n\nexport async function getUsers(): Promise<Member[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'members'));\n    const members: Member[] = [];\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      members.push({\n        id: doc.id,\n        name: data.name,\n        email: data.email,\n        phone: data.phone,\n        joined: (data.joined as Timestamp).toDate().toISOString(),\n        avatarUrl: data.avatarUrl,\n        avatarHint: data.avatarHint,\n      });\n    });\n    return members.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching users: \", error);\n    return [];\n  }\n}\n\nexport async function getMember(id: string): Promise<Member | null> {\n    try {\n        const docRef = doc(db, 'members', id);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            const data = docSnap.data();\n            return {\n                id: docSnap.id,\n                name: data.name,\n                email: data.email,\n                phone: data.phone,\n                joined: (data.joined as Timestamp).toDate().toISOString(),\n                avatarUrl: data.avatarUrl,\n                avatarHint: data.avatarHint,\n            };\n        } else {\n            console.log(\"No such document!\");\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Error fetching member: \", error);\n        return null;\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 676, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/settings/actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { doc, getDoc, setDoc, updateDoc, arrayUnion } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { PriceList } from '@/lib/types';\n\nconst SETTINGS_COLLECTION = 'settings';\nconst MAIN_SETTINGS_DOC = 'main';\n\ninterface Settings {\n    taxRate: number;\n    priceLists: PriceList[];\n    activePriceListId?: string;\n}\n\nexport async function getSettings(): Promise<Settings> {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            return docSnap.data() as Settings;\n        } else {\n            // Default settings if document doesn't exist\n            const defaultSettings: Settings = {\n                taxRate: 8.0,\n                priceLists: [\n                    { id: 'pl-1', name: 'Default', discount: 0 },\n                    { id: 'pl-2', name: 'Happy Hour', discount: 20 },\n                    { id: 'pl-3', name: 'Employee Discount', discount: 50 },\n                ],\n                activePriceListId: 'pl-1',\n            };\n            await setDoc(docRef, defaultSettings);\n            return defaultSettings;\n        }\n    } catch (error) {\n        console.error(\"Error fetching settings: \", error);\n        // Fallback to default settings on error\n        return { taxRate: 8.0, priceLists: [], activePriceListId: undefined };\n    }\n}\n\nexport async function saveTaxRate(newRate: number) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { taxRate: newRate });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving tax rate: \", error);\n        return { success: false, error: 'Failed to save tax rate.' };\n    }\n}\n\nexport async function saveActivePriceList(priceListId: string | null) {\n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { activePriceListId: priceListId || null });\n        revalidatePath('/admin/settings');\n        revalidatePath('/'); // For POS\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error saving active price list: \", error);\n        return { success: false, error: 'Failed to save active price list.' };\n    }\n}\n\nexport async function addPriceList(formData: FormData) {\n    const newPriceList: PriceList = {\n        id: `pl-${Date.now()}`,\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, {\n            priceLists: arrayUnion(newPriceList)\n        });\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error adding price list: \", error);\n        return { success: false, error: 'Failed to add price list.' };\n    }\n}\n\nexport async function updatePriceList(id: string, formData: FormData) {\n    const updatedPriceList: Partial<PriceList> = {\n        name: formData.get('name') as string,\n        discount: parseFloat(formData.get('discount') as string),\n    };\n    \n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.map(pl => \n            pl.id === id ? { ...pl, ...updatedPriceList } : pl\n        );\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        await updateDoc(docRef, { priceLists: updatedPriceLists });\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error updating price list: \", error);\n        return { success: false, error: 'Failed to update price list.' };\n    }\n}\n\nexport async function deletePriceList(id: string) {\n    try {\n        const settings = await getSettings();\n        const updatedPriceLists = settings.priceLists.filter(pl => pl.id !== id);\n        \n        const docRef = doc(db, SETTINGS_COLLECTION, MAIN_SETTINGS_DOC);\n        \n        const updateData: { priceLists: PriceList[], activePriceListId?: string | null } = {\n            priceLists: updatedPriceLists\n        };\n\n        // If the deleted price list was the active one, reset it.\n        if (settings.activePriceListId === id) {\n            updateData.activePriceListId = null;\n        }\n\n        await updateDoc(docRef, updateData);\n\n        revalidatePath('/admin/settings');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting price list: \", error);\n        return { success: false, error: 'Failed to delete price list.' };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/tables/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { RestaurantTable } from '@/lib/types';\n\nexport async function addTable(formData: FormData) {\n  const newTable: Omit<RestaurantTable, 'id'> = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'tables'), newTable);\n    revalidatePath('/admin/tables');\n    revalidatePath('/'); // For POS\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding table: ', e);\n    if (e instanceof Error) {\n        return { success: false, error: e.message };\n    }\n    return { success: false, error: 'Failed to add table.' };\n  }\n}\n\nexport async function updateTable(id: string, formData: FormData) {\n    const tableUpdates = {\n        name: formData.get('name') as string,\n    };\n\n    try {\n        const tableRef = doc(db, 'tables', id);\n        await updateDoc(tableRef, tableUpdates);\n        revalidatePath('/admin/tables');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating table: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to update table.' };\n    }\n}\n\nexport async function deleteTable(id: string) {\n    try {\n        await deleteDoc(doc(db, 'tables', id));\n        revalidatePath('/admin/tables');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting table: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to delete table.' };\n    }\n}\n\nexport async function getTables(): Promise<RestaurantTable[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'tables'));\n    const tables: RestaurantTable[] = [];\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      tables.push({ \n        id: doc.id,\n        name: data.name,\n       } as RestaurantTable);\n    });\n    return tables.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching tables: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAGA;AACA;AAAA;AACA;;;;;;;AAGO,eAAe,SAAS,QAAkB;IAC/C,MAAM,WAAwC;QAC5C,MAAM,SAAS,GAAG,CAAC;IACrB;IAEA,IAAI;QACF,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,WAAW;QACvC,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,UAAU;QAC/B,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,wBAAwB;QACtC,IAAI,aAAa,OAAO;YACpB,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAAuB;IACzD;AACF;AAEO,eAAe,YAAY,EAAU,EAAE,QAAkB;IAC5D,MAAM,eAAe;QACjB,MAAM,SAAS,GAAG,CAAC;IACvB;IAEA,IAAI;QACA,MAAM,WAAW,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,UAAU;QACnC,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,UAAU;QAC1B,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC,0BAA0B;QACxC,IAAI,aAAa,OAAO;YACpB,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAA0B;IAC9D;AACJ;AAEO,eAAe,YAAY,EAAU;IACxC,IAAI;QACA,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,UAAU;QAClC,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC,0BAA0B;QACxC,IAAI,aAAa,OAAO;YACpB,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAA0B;IAC9D;AACJ;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QACnD,MAAM,SAA4B,EAAE;QACpC,cAAc,OAAO,CAAC,CAAC;YACrB,MAAM,OAAO,IAAI,IAAI;YACrB,OAAO,IAAI,CAAC;gBACV,IAAI,IAAI,EAAE;gBACV,MAAM,KAAK,IAAI;YAChB;QACH;QACA,OAAO,OAAO,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI;IAC1D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,EAAE;IACX;AACF;;;IAtEsB;IAmBA;IAoBA;IAeA;;AAtDA,+OAAA;AAmBA,+OAAA;AAoBA,+OAAA;AAeA,+OAAA","debugId":null}},
    {"offset": {"line": 998, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pos/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { \n    collection, \n    addDoc, \n    getDocs, \n    doc, \n    getDoc, \n    Timestamp, \n    query, \n    orderBy, \n    deleteDoc, \n    updateDoc,\n    runTransaction,\n    where,\n    documentId\n} from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { ActiveOrder, Check, OrderItem, OrderStatus, PriceList } from '@/lib/types';\n\n// Check Actions\nexport async function getChecks(): Promise<Check[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'checks'));\n    const checks: Check[] = [];\n    querySnapshot.forEach((doc) => {\n      checks.push({ id: doc.id, ...doc.data() } as Check);\n    });\n    return checks.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching checks: \", error);\n    return [];\n  }\n}\n\nexport async function addCheck(check: Omit<Check, 'id'>): Promise<Check> {\n    const docRef = await addDoc(collection(db, 'checks'), check);\n    revalidatePath('/');\n    return { id: docRef.id, ...check };\n}\n\nexport async function updateCheck(checkId: string, updates: Partial<Omit<Check, 'id'>>) {\n  try {\n    const checkRef = doc(db, 'checks', checkId);\n    await updateDoc(checkRef, updates);\n    // No revalidate needed for this as it's a frequent action\n    return { success: true };\n  } catch (e) {\n    console.error(\"Error updating check: \", e);\n    return { success: false, error: 'Failed to update check.' };\n  }\n}\n\nexport async function deleteCheck(checkId: string) {\n    try {\n        await deleteDoc(doc(db, 'checks', checkId));\n        revalidatePath('/');\n        return { success: true };\n    } catch(e) {\n        console.error(\"Error deleting check: \", e);\n        return { success: false, error: 'Failed to delete check.' };\n    }\n}\n\n// Order Actions\nexport async function sendNewItemsToKitchen(checkId: string) {\n    const sourceCheckRef = doc(db, 'checks', checkId);\n\n    // Phase 1: Read data outside transaction to find if a merge is needed\n    const sourceCheckSnap = await getDoc(sourceCheckRef);\n\n    if (!sourceCheckSnap.exists()) {\n        return { success: false, error: 'Check not found.' };\n    }\n    const sourceCheck = { id: sourceCheckSnap.id, ...sourceCheckSnap.data() } as Check;\n    \n    let targetCheckId: string | null = null;\n    // Merge logic only applies to dine-in orders with a specified table\n    if (sourceCheck.orderType === 'Dine In' && sourceCheck.tableId) {\n        const q = query(\n            collection(db, 'checks'), \n            where('tableId', '==', sourceCheck.tableId), \n            where(documentId(), '!=', sourceCheck.id)\n        );\n        const existingChecksSnap = await getDocs(q);\n        if (existingChecksSnap.docs.length > 0) {\n            targetCheckId = existingChecksSnap.docs[0].id;\n        }\n    }\n\n    // Phase 2: Perform atomic write operations in a transaction\n    try {\n        await runTransaction(db, async (transaction) => {\n            // ----- ALL READS FIRST -----\n            const settingsDocRef = doc(db, \"settings\", \"main\");\n            const freshSourceSnap = await transaction.get(sourceCheckRef);\n            const settingsDoc = await transaction.get(settingsDocRef);\n            \n            let freshTargetSnap: any = null;\n            let targetCheckRef: any = null;\n            if (targetCheckId) {\n                targetCheckRef = doc(db, 'checks', targetCheckId);\n                freshTargetSnap = await transaction.get(targetCheckRef);\n            }\n            \n            if (!freshSourceSnap.exists()) {\n                throw new Error(\"Source check was deleted during operation.\");\n            }\n            \n            // ----- LOGIC AND PREPARATION -----\n            const freshSourceCheck = { id: freshSourceSnap.id, ...freshSourceSnap.data() } as Check;\n            const newItemsToProcess = freshSourceCheck.items.filter(item => item.status === 'new');\n\n            if (newItemsToProcess.length === 0) {\n                return; // Nothing to send, exit transaction.\n            }\n\n            const settings = settingsDoc.exists() ? settingsDoc.data()! : { taxRate: 0, priceLists: [] };\n            const taxRate = settings.taxRate || 0;\n            const priceLists: PriceList[] = settings.priceLists || [];\n            \n            const newSanitizedItems = newItemsToProcess.map(item => {\n                const { ingredients, cost, ...rest } = item;\n                return rest;\n            });\n\n            // Determine which check data to use for the new order (for pricing, customer name, etc.)\n            const finalCheckDataForOrder = freshTargetSnap?.exists() \n                ? { ...freshTargetSnap.data(), id: freshTargetSnap.id } as Check \n                : freshSourceCheck;\n\n            const subtotal = newSanitizedItems.reduce((acc, item) => {\n                const extrasPrice = item.customizations?.added.reduce((extraAcc, extra) => extraAcc + extra.price, 0) || 0;\n                const totalItemPrice = (item.price + extrasPrice) * item.quantity;\n                return acc + totalItemPrice;\n            }, 0);\n            \n            const selectedPriceList = priceLists.find(pl => pl.id === finalCheckDataForOrder.priceListId);\n            const discountPercentage = selectedPriceList?.discount || 0;\n            const discountAmount = subtotal * (discountPercentage / 100);\n            const discountedSubtotal = subtotal - discountAmount;\n            const tax = discountedSubtotal * (taxRate / 100);\n            const total = discountedSubtotal + tax;\n            const totalPreparationTime = newSanitizedItems.reduce((acc, item) => acc + (item.preparationTime || 5) * item.quantity, 0);\n\n            const newOrderData = {\n                items: newSanitizedItems,\n                status: 'Preparing' as OrderStatus,\n                total: total,\n                createdAt: Timestamp.now(),\n                checkName: `${finalCheckDataForOrder.name} (Batch)`,\n                totalPreparationTime,\n                orderType: finalCheckDataForOrder.orderType,\n                tableId: finalCheckDataForOrder.tableId || null,\n                tableName: finalCheckDataForOrder.tableName || null,\n                customerName: finalCheckDataForOrder.customerName || null,\n                priceListId: finalCheckDataForOrder.priceListId || null,\n                discountApplied: discountPercentage,\n            };\n\n            const newOrderRef = doc(collection(db, 'orders'));\n\n            // ----- ALL WRITES LAST -----\n            transaction.set(newOrderRef, newOrderData);\n\n            if (targetCheckRef && freshTargetSnap?.exists()) {\n                // MERGE case\n                if (!freshTargetSnap.exists()) throw new Error(\"Target check was deleted during operation.\");\n                const targetCheck = { id: freshTargetSnap.id, ...freshTargetSnap.data() } as Check;\n                const itemsToMerge = newItemsToProcess.map(item => ({...item, status: 'sent' as const}));\n                const mergedItems = [...targetCheck.items, ...itemsToMerge];\n                \n                transaction.update(targetCheckRef, { items: mergedItems });\n                transaction.delete(sourceCheckRef);\n            } else {\n                // NO MERGE case\n                const updatedItems = freshSourceCheck.items.map(item => \n                    item.status === 'new' ? { ...item, status: 'sent' as const } : item\n                );\n                transaction.update(sourceCheckRef, { items: updatedItems });\n            }\n        });\n\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error(\"Error in transaction for sending items to kitchen: \", e);\n        if (e instanceof Error) {\n          return { success: false, error: e.message };\n        }\n        return { success: false, error: 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function getOrders(): Promise<ActiveOrder[]> {\n  try {\n    const q = query(collection(db, 'orders'), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    const orders: ActiveOrder[] = [];\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      orders.push({\n        id: doc.id,\n        items: data.items,\n        status: data.status,\n        total: data.total,\n        checkName: data.checkName,\n        createdAt: (data.createdAt as Timestamp).toDate(),\n        totalPreparationTime: data.totalPreparationTime,\n        orderType: data.orderType,\n        tableId: data.tableId,\n        tableName: data.tableName,\n        customerName: data.customerName,\n        priceListId: data.priceListId,\n        discountApplied: data.discountApplied,\n      });\n    });\n    return orders;\n  } catch (error) {\n    console.error(\"Error fetching orders: \", error);\n    return [];\n  }\n}\n\n\nexport async function addOrder(orderData: Omit<ActiveOrder, 'id' | 'createdAt'> & { createdAt: Date }) {\n    try {\n        // Sanitize items before saving to prevent storing client-side fields\n        const sanitizedItems = orderData.items.map(item => {\n            const { ingredients, cost, ...rest } = item;\n            return rest;\n        });\n\n        const dataToSave = {\n            ...orderData,\n            items: sanitizedItems,\n            createdAt: Timestamp.fromDate(orderData.createdAt),\n            tableId: orderData.tableId || null,\n            tableName: orderData.tableName || null,\n            customerName: orderData.customerName || null,\n            priceListId: orderData.priceListId || null,\n        };\n\n        await addDoc(collection(db, 'orders'), dataToSave);\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error(\"Error adding order: \", e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to add order.' };\n    }\n}\n\nexport async function updateOrderStatus(orderId: string, status: OrderStatus) {\n    try {\n        const orderRef = doc(db, 'orders', orderId);\n        await updateDoc(orderRef, { status });\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error(\"Error updating order status: \", e);\n        return { success: false, error: 'Failed to update order status.' };\n    }\n}\n\nexport async function deleteOrder(orderId: string) {\n    try {\n        await deleteDoc(doc(db, 'orders', orderId));\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error(\"Error deleting order: \", e);\n        return { success: false, error: 'Failed to delete order.' };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1340, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCategories as '00250df251d14c70356e11c41121848a2f36dad56d'} from 'ACTIONS_MODULE0'\nexport {getMenuItems as '005d27be1c353e62c14cdfbb8b42ccddcd8e2c5684'} from 'ACTIONS_MODULE0'\nexport {getExtras as '008ca4870805d0ca71dd18af60b82faa82dfd48517'} from 'ACTIONS_MODULE1'\nexport {getUsers as '008168638a7391fac885b403e884437a33d75371a0'} from 'ACTIONS_MODULE2'\nexport {getSettings as '00ddf0070dce5d04f377bccd95ae69f8b7c30641a1'} from 'ACTIONS_MODULE3'\nexport {getTables as '00d9b3a10a35e11820272036ad786c27fd5b4e0d9c'} from 'ACTIONS_MODULE4'\nexport {getChecks as '0031d44aa8a504decdf347af4c441fe28fc309c16c'} from 'ACTIONS_MODULE5'\nexport {addCheck as '40ccc18b1ac5d408902662a27ec7a65c308197f5a4'} from 'ACTIONS_MODULE5'\nexport {updateCheck as '6014df7684e63d49ae5980a6100673f0cd78459342'} from 'ACTIONS_MODULE5'\nexport {deleteCheck as '407e07aedb694a1d2d12f09703b764f79a4a2b5dc0'} from 'ACTIONS_MODULE5'\nexport {getOrders as '00a43ce77b0b9c08c0ca14fd356ccbfab4eba3feb0'} from 'ACTIONS_MODULE5'\nexport {addOrder as '40fe70b2dccbfc7c98046752200fba85f74bdea99c'} from 'ACTIONS_MODULE5'\nexport {deleteOrder as '40afa6f114ae8fde89d6a0b230ec72472d2ef1c650'} from 'ACTIONS_MODULE5'\nexport {updateOrderStatus as '60a580b3dbdc81412e7fdca83cd53162460270b88a'} from 'ACTIONS_MODULE5'\nexport {sendNewItemsToKitchen as '409db8b679714c8c9ef8f87f55c2f6873dd3886524'} from 'ACTIONS_MODULE5'\n"],"names":[],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 1449, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 1463, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 1477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}