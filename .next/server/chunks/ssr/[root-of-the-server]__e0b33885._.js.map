{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/dashboard-client.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport type { ActiveOrder } from '@/lib/types';\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { collection, onSnapshot, query, orderBy, Timestamp } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport { Bar, BarChart, CartesianGrid, XAxis, YAxis, Pie, PieChart, Cell, ResponsiveContainer } from 'recharts';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent } from \"@/components/ui/chart\";\nimport { DollarSign, ShoppingCart, Percent, Clock } from 'lucide-react';\nimport { format } from 'date-fns';\n\nexport default function DashboardClient({ initialOrders }: { initialOrders: ActiveOrder[] }) {\n    const [orders, setOrders] = useState<ActiveOrder[]>(initialOrders);\n\n    useEffect(() => {\n        const q = query(collection(db, 'orders'), orderBy('createdAt', 'desc'));\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\n            const liveOrders: ActiveOrder[] = [];\n            querySnapshot.forEach((doc) => {\n                const data = doc.data();\n                liveOrders.push({\n                    id: doc.id,\n                    ...data,\n                    createdAt: (data.createdAt as Timestamp).toDate(),\n                } as ActiveOrder);\n            });\n            setOrders(liveOrders);\n        });\n\n        return () => unsubscribe();\n    }, []);\n\n    const reportData = useMemo(() => {\n        const totalRevenue = orders.reduce((acc, order) => acc + order.total, 0);\n        const totalOrders = orders.length;\n        const averageOrderValue = totalOrders > 0 ? totalRevenue / totalOrders : 0;\n        const totalPrepTime = orders.reduce((acc, order) => acc + (order.totalPreparationTime || 0), 0);\n        const averagePrepTime = totalOrders > 0 ? totalPrepTime / totalOrders : 0;\n        \n        const orderTypeCounts = orders.reduce((acc, order) => {\n            const type = order.orderType || 'Unknown';\n            acc[type] = (acc[type] || 0) + 1;\n            return acc;\n        }, {} as Record<string, number>);\n\n        const orderTypeData = Object.entries(orderTypeCounts).map(([name, value]) => ({ name, value }));\n        \n        const topSellingItems = orders\n            .flatMap(order => order.items)\n            .reduce((acc, item) => {\n                const existing = acc.get(item.name);\n                if (existing) {\n                    existing.quantity += item.quantity;\n                    existing.revenue += item.price * item.quantity;\n                } else {\n                    acc.set(item.name, {\n                        name: item.name,\n                        quantity: item.quantity,\n                        revenue: item.price * item.quantity\n                    });\n                }\n                return acc;\n            }, new Map<string, {name: string, quantity: number, revenue: number}>());\n\n        const sortedTopItems = Array.from(topSellingItems.values())\n            .sort((a, b) => b.quantity - a.quantity)\n            .slice(0, 5);\n\n        const revenueByDay = orders.reduce((acc, order) => {\n            const day = format(order.createdAt, 'yyyy-MM-dd');\n            acc[day] = (acc[day] || 0) + order.total;\n            return acc;\n        }, {} as Record<string, number>);\n\n        const dailyRevenueData = Object.entries(revenueByDay)\n            .map(([date, revenue]) => ({ date, revenue: parseFloat(revenue.toFixed(2)) }))\n            .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n            .slice(-30);\n\n        return {\n            totalRevenue,\n            totalOrders,\n            averageOrderValue,\n            averagePrepTime,\n            orderTypeData,\n            sortedTopItems,\n            dailyRevenueData\n        };\n    }, [orders]);\n    \n    const PIE_COLORS = ['hsl(var(--chart-1))', 'hsl(var(--chart-2))', 'hsl(var(--chart-3))'];\n\n    const chartConfig = {\n        revenue: { label: \"Revenue\", color: \"hsl(var(--chart-1))\" },\n        'Dine In': { label: \"Dine In\", color: \"hsl(var(--chart-1))\" },\n        'Take Away': { label: \"Take Away\", color: \"hsl(var(--chart-2))\" },\n        'Unknown': { label: \"Unknown\", color: \"hsl(var(--chart-3))\" }\n    };\n\n    return (\n        <div className=\"space-y-6\">\n            <div>\n                <h1 className=\"text-3xl font-bold font-headline\">Dashboard</h1>\n                <p className=\"text-muted-foreground\">A real-time overview of your restaurant's performance.</p>\n            </div>\n            \n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n                <Card><CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"><CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle><DollarSign className=\"h-4 w-4 text-muted-foreground\" /></CardHeader><CardContent><div className=\"text-2xl font-bold\">${reportData.totalRevenue.toFixed(2)}</div></CardContent></Card>\n                <Card><CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"><CardTitle className=\"text-sm font-medium\">Total Orders</CardTitle><ShoppingCart className=\"h-4 w-4 text-muted-foreground\" /></CardHeader><CardContent><div className=\"text-2xl font-bold\">{reportData.totalOrders}</div></CardContent></Card>\n                <Card><CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"><CardTitle className=\"text-sm font-medium\">Avg. Order Value</CardTitle><Percent className=\"h-4 w-4 text-muted-foreground\" /></CardHeader><CardContent><div className=\"text-2xl font-bold\">${reportData.averageOrderValue.toFixed(2)}</div></CardContent></Card>\n                <Card><CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\"><CardTitle className=\"text-sm font-medium\">Avg. Prep Time</CardTitle><Clock className=\"h-4 w-4 text-muted-foreground\" /></CardHeader><CardContent><div className=\"text-2xl font-bold\">{reportData.averagePrepTime.toFixed(1)} min</div></CardContent></Card>\n            </div>\n            \n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\">\n                <Card className=\"lg:col-span-4\">\n                    <CardHeader><CardTitle>Revenue Over Time</CardTitle><CardDescription>Showing revenue for the last 30 days.</CardDescription></CardHeader>\n                    <CardContent className=\"pl-2\">\n                        <ChartContainer config={chartConfig} className=\"h-[250px] w-full\">\n                           <ResponsiveContainer>\n                                <BarChart data={reportData.dailyRevenueData}>\n                                    <CartesianGrid vertical={false} />\n                                    <XAxis dataKey=\"date\" tickLine={false} axisLine={false} tickMargin={8} tickFormatter={(value) => format(new Date(value), \"MMM d\")}/>\n                                    <YAxis tickFormatter={(value) => `$${value}`} />\n                                    <ChartTooltip cursor={false} content={<ChartTooltipContent indicator=\"dot\" />} />\n                                    <Bar dataKey=\"revenue\" fill=\"var(--color-revenue)\" radius={4} />\n                                </BarChart>\n                            </ResponsiveContainer>\n                        </ChartContainer>\n                    </CardContent>\n                </Card>\n                <Card className=\"lg:col-span-3\">\n                    <CardHeader><CardTitle>Order Types</CardTitle><CardDescription>Breakdown of orders by type.</CardDescription></CardHeader>\n                    <CardContent className=\"flex items-center justify-center\">\n                        <ChartContainer config={chartConfig} className=\"h-[200px] w-full max-w-[300px]\">\n                            <ResponsiveContainer>\n                                <PieChart>\n                                    <ChartTooltip content={<ChartTooltipContent hideLabel />} />\n                                    <Pie data={reportData.orderTypeData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={80} fill=\"#8884d8\">\n                                         {reportData.orderTypeData.map((entry, index) => (\n                                            <Cell key={`cell-${index}`} fill={PIE_COLORS[index % PIE_COLORS.length]} />\n                                        ))}\n                                    </Pie>\n                                    <ChartLegend content={<ChartLegendContent nameKey=\"name\" />} />\n                                </PieChart>\n                            </ResponsiveContainer>\n                        </ChartContainer>\n                    </CardContent>\n                </Card>\n            </div>\n\n            <Card>\n                <CardHeader>\n                    <CardTitle>Top Selling Items</CardTitle>\n                    <CardDescription>Your most popular menu items by quantity sold.</CardDescription>\n                </CardHeader>\n                <CardContent>\n                   <Table>\n                        <TableHeader>\n                            <TableRow>\n                                <TableHead>Item Name</TableHead>\n                                <TableHead className=\"text-right\">Quantity Sold</TableHead>\n                                <TableHead className=\"text-right\">Total Revenue</TableHead>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {reportData.sortedTopItems.map((item) => (\n                                <TableRow key={item.name}>\n                                    <TableCell className=\"font-medium\">{item.name}</TableCell>\n                                    <TableCell className=\"text-right\">{item.quantity}</TableCell>\n                                    <TableCell className=\"text-right\">${item.revenue.toFixed(2)}</TableCell>\n                                </TableRow>\n                            ))}\n                             {reportData.sortedTopItems.length === 0 && (\n                                <TableRow>\n                                    <TableCell colSpan={3} className=\"h-24 text-center\">No sales data available yet.</TableCell>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </CardContent>\n            </Card>\n\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}