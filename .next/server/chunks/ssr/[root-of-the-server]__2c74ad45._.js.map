{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/ingredients/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { Ingredient } from '@/lib/types';\n\nexport async function addIngredient(formData: FormData) {\n  const newIngredient: Omit<Ingredient, 'id'> = {\n    name: formData.get('name') as string,\n    stock: parseFloat(formData.get('stock') as string) || 0,\n    unit: formData.get('unit') as string || 'units',\n    cost: parseFloat(formData.get('cost') as string) || 0,\n  };\n\n  try {\n    await addDoc(collection(db, 'ingredients'), newIngredient);\n    revalidatePath('/admin/ingredients');\n    revalidatePath('/admin/menu'); // Revalidate menu page as it uses ingredients\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding ingredient: ', e);\n    if (e instanceof Error) {\n        return { success: false, error: e.message };\n    }\n    return { success: false, error: 'Failed to add ingredient.' };\n  }\n}\n\nexport async function updateIngredient(id: string, formData: FormData) {\n    const ingredientUpdates = {\n        name: formData.get('name') as string,\n        stock: parseFloat(formData.get('stock') as string) || 0,\n        unit: formData.get('unit') as string || 'units',\n        cost: parseFloat(formData.get('cost') as string) || 0,\n    };\n\n    try {\n        const ingredientRef = doc(db, 'ingredients', id);\n        await updateDoc(ingredientRef, ingredientUpdates);\n        revalidatePath('/admin/ingredients');\n        revalidatePath('/admin/menu');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating ingredient: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to update ingredient.' };\n    }\n}\n\nexport async function deleteIngredient(id: string) {\n    try {\n        await deleteDoc(doc(db, 'ingredients', id));\n        revalidatePath('/admin/ingredients');\n        revalidatePath('/admin/menu');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting ingredient: ', e);\n        if (e instanceof Error) {\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'Failed to delete ingredient.' };\n    }\n}\n\n\nexport async function getIngredients(): Promise<Ingredient[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'ingredients'));\n    const ingredients: Ingredient[] = [];\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      ingredients.push({ \n        id: doc.id,\n        name: data.name,\n        stock: data.stock || 0,\n        unit: data.unit || 'units',\n        cost: data.cost || 0,\n       } as Ingredient);\n    });\n    return ingredients.sort((a, b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching ingredients: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/ingredients/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getIngredients as '00479c034c4f61ad1cbbf4089fa4983637e34520c3'} from 'ACTIONS_MODULE0'\nexport {addIngredient as '4096b3c8d80ef4e7d88f681927cfd5ce93c7d07efb'} from 'ACTIONS_MODULE0'\nexport {deleteIngredient as '40cd5e001dba0f16dc3e78a8cbf728d75006d058c8'} from 'ACTIONS_MODULE0'\nexport {updateIngredient as '6059bee7ba44454df51efd462a5e55374c4efddfa2'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/ingredients-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/ingredients-client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/ingredients-client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+S,GAC5U,6EACA","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/ingredients-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin/ingredients-client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/ingredients-client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2R,GACxT,yDACA","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/ingredients/page.tsx"],"sourcesContent":["import IngredientsClient from \"@/components/admin/ingredients-client\";\nimport { getIngredients } from \"./actions\";\n\nexport default async function AdminIngredientsPage() {\n    const ingredients = await getIngredients();\n    return <IngredientsClient initialIngredients={ingredients} />;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,eAAe;IAC1B,MAAM,cAAc,MAAM,CAAA,GAAA,6IAAA,CAAA,iBAAc,AAAD;IACvC,qBAAO,8OAAC,oJAAA,CAAA,UAAiB;QAAC,oBAAoB;;;;;;AAClD","debugId":null}}]
}