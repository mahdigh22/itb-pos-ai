{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 688, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 916, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 968, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { MenuItem, Category, Ingredient } from '@/lib/types';\n\n// Menu Item Actions\nexport async function addMenuItem(formData: FormData) {\n  const ingredientLinksString = formData.get('ingredientLinks') as string;\n  const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n  const newItemData: Omit<MenuItem, 'id' | 'cost'> = {\n    name: formData.get('name') as string,\n    description: formData.get('description') as string,\n    price: parseFloat(formData.get('price') as string),\n    category: formData.get('category') as string,\n    imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n    imageHint: 'food placeholder',\n    preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n    ingredientLinks: ingredientLinks,\n  };\n\n  try {\n    await addDoc(collection(db, 'menuItems'), newItemData);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add menu item.' };\n  }\n}\n\nexport async function updateMenuItem(id: string, formData: FormData) {\n    const ingredientLinksString = formData.get('ingredientLinks') as string;\n    const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n    const itemUpdates = {\n        name: formData.get('name') as string,\n        description: formData.get('description') as string,\n        price: parseFloat(formData.get('price') as string),\n        category: formData.get('category') as string,\n        imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n        preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n        ingredientLinks: ingredientLinks,\n    };\n    \n    try {\n        await updateDoc(doc(db, 'menuItems', id), itemUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update menu item.' };\n    }\n}\n\nexport async function deleteMenuItem(id: string) {\n    try {\n        await deleteDoc(doc(db, 'menuItems', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete menu item.' };\n    }\n}\n\n\nexport async function getMenuItems(): Promise<MenuItem[]> {\n  try {\n    const [menuItemsSnapshot, ingredientsSnapshot] = await Promise.all([\n        getDocs(collection(db, 'menuItems')),\n        getDocs(collection(db, 'ingredients'))\n    ]);\n\n    const ingredientsMap = new Map<string, Ingredient>();\n    ingredientsSnapshot.forEach(doc => {\n        const data = doc.data();\n        ingredientsMap.set(doc.id, { \n          id: doc.id,\n          name: data.name,\n          stock: data.stock || 0,\n          unit: data.unit || 'units',\n          cost: data.cost || 0,\n        } as Ingredient);\n    });\n\n    const items: MenuItem[] = [];\n    menuItemsSnapshot.forEach((doc) => {\n      const data = doc.data();\n      const menuItem = { id: doc.id, ...data } as MenuItem;\n      \n      let calculatedCost = 0;\n\n      // Resolve ingredient links\n      if (menuItem.ingredientLinks) {\n          menuItem.ingredients = menuItem.ingredientLinks\n            .map(link => {\n                const ingredient = ingredientsMap.get(link.ingredientId);\n                if (ingredient) {\n                    calculatedCost += (ingredient.cost || 0) * (link.quantity || 0);\n                    return { \n                      ...ingredient, \n                      isOptional: link.isOptional, \n                      quantity: link.quantity || 1, // Default quantity to 1 if not specified\n                    };\n                }\n                return null;\n            })\n            .filter(Boolean) as MenuItem['ingredients'];\n      }\n      \n      menuItem.cost = calculatedCost;\n      items.push(menuItem);\n    });\n\n    return items.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching menu items: \", error);\n    return [];\n  }\n}\n\n// Category Actions\nexport async function addCategory(formData: FormData) {\n  const newCategory = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'categories'), newCategory);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add category.' };\n  }\n}\n\n\nexport async function updateCategory(id: string, formData: FormData) {\n    const categoryUpdates = {\n        name: formData.get('name') as string,\n    };\n    try {\n        await updateDoc(doc(db, 'categories', id), categoryUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update category.' };\n    }\n}\n\nexport async function deleteCategory(id: string) {\n    try {\n        // TODO: Add logic to handle menu items in this category\n        await deleteDoc(doc(db, 'categories', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete category.' };\n    }\n}\n\n\nexport async function getCategories(): Promise<Category[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'categories'));\n    const categories: Category[] = [];\n    querySnapshot.forEach((doc) => {\n      categories.push({ id: doc.id, ...doc.data() } as Category);\n    });\n    return categories.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching categories: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":";;;;;;IASsB,cAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1136, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { MenuItem, Category, Ingredient } from '@/lib/types';\n\n// Menu Item Actions\nexport async function addMenuItem(formData: FormData) {\n  const ingredientLinksString = formData.get('ingredientLinks') as string;\n  const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n  const newItemData: Omit<MenuItem, 'id' | 'cost'> = {\n    name: formData.get('name') as string,\n    description: formData.get('description') as string,\n    price: parseFloat(formData.get('price') as string),\n    category: formData.get('category') as string,\n    imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n    imageHint: 'food placeholder',\n    preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n    ingredientLinks: ingredientLinks,\n  };\n\n  try {\n    await addDoc(collection(db, 'menuItems'), newItemData);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add menu item.' };\n  }\n}\n\nexport async function updateMenuItem(id: string, formData: FormData) {\n    const ingredientLinksString = formData.get('ingredientLinks') as string;\n    const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n    const itemUpdates = {\n        name: formData.get('name') as string,\n        description: formData.get('description') as string,\n        price: parseFloat(formData.get('price') as string),\n        category: formData.get('category') as string,\n        imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n        preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n        ingredientLinks: ingredientLinks,\n    };\n    \n    try {\n        await updateDoc(doc(db, 'menuItems', id), itemUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update menu item.' };\n    }\n}\n\nexport async function deleteMenuItem(id: string) {\n    try {\n        await deleteDoc(doc(db, 'menuItems', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete menu item.' };\n    }\n}\n\n\nexport async function getMenuItems(): Promise<MenuItem[]> {\n  try {\n    const [menuItemsSnapshot, ingredientsSnapshot] = await Promise.all([\n        getDocs(collection(db, 'menuItems')),\n        getDocs(collection(db, 'ingredients'))\n    ]);\n\n    const ingredientsMap = new Map<string, Ingredient>();\n    ingredientsSnapshot.forEach(doc => {\n        const data = doc.data();\n        ingredientsMap.set(doc.id, { \n          id: doc.id,\n          name: data.name,\n          stock: data.stock || 0,\n          unit: data.unit || 'units',\n          cost: data.cost || 0,\n        } as Ingredient);\n    });\n\n    const items: MenuItem[] = [];\n    menuItemsSnapshot.forEach((doc) => {\n      const data = doc.data();\n      const menuItem = { id: doc.id, ...data } as MenuItem;\n      \n      let calculatedCost = 0;\n\n      // Resolve ingredient links\n      if (menuItem.ingredientLinks) {\n          menuItem.ingredients = menuItem.ingredientLinks\n            .map(link => {\n                const ingredient = ingredientsMap.get(link.ingredientId);\n                if (ingredient) {\n                    calculatedCost += (ingredient.cost || 0) * (link.quantity || 0);\n                    return { \n                      ...ingredient, \n                      isOptional: link.isOptional, \n                      quantity: link.quantity || 1, // Default quantity to 1 if not specified\n                    };\n                }\n                return null;\n            })\n            .filter(Boolean) as MenuItem['ingredients'];\n      }\n      \n      menuItem.cost = calculatedCost;\n      items.push(menuItem);\n    });\n\n    return items.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching menu items: \", error);\n    return [];\n  }\n}\n\n// Category Actions\nexport async function addCategory(formData: FormData) {\n  const newCategory = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'categories'), newCategory);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add category.' };\n  }\n}\n\n\nexport async function updateCategory(id: string, formData: FormData) {\n    const categoryUpdates = {\n        name: formData.get('name') as string,\n    };\n    try {\n        await updateDoc(doc(db, 'categories', id), categoryUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update category.' };\n    }\n}\n\nexport async function deleteCategory(id: string) {\n    try {\n        // TODO: Add logic to handle menu items in this category\n        await deleteDoc(doc(db, 'categories', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete category.' };\n    }\n}\n\n\nexport async function getCategories(): Promise<Category[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'categories'));\n    const categories: Category[] = [];\n    querySnapshot.forEach((doc) => {\n      categories.push({ id: doc.id, ...doc.data() } as Category);\n    });\n    return categories.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching categories: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":";;;;;;IAiIsB,cAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1152, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { MenuItem, Category, Ingredient } from '@/lib/types';\n\n// Menu Item Actions\nexport async function addMenuItem(formData: FormData) {\n  const ingredientLinksString = formData.get('ingredientLinks') as string;\n  const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n  const newItemData: Omit<MenuItem, 'id' | 'cost'> = {\n    name: formData.get('name') as string,\n    description: formData.get('description') as string,\n    price: parseFloat(formData.get('price') as string),\n    category: formData.get('category') as string,\n    imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n    imageHint: 'food placeholder',\n    preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n    ingredientLinks: ingredientLinks,\n  };\n\n  try {\n    await addDoc(collection(db, 'menuItems'), newItemData);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add menu item.' };\n  }\n}\n\nexport async function updateMenuItem(id: string, formData: FormData) {\n    const ingredientLinksString = formData.get('ingredientLinks') as string;\n    const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n    const itemUpdates = {\n        name: formData.get('name') as string,\n        description: formData.get('description') as string,\n        price: parseFloat(formData.get('price') as string),\n        category: formData.get('category') as string,\n        imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n        preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n        ingredientLinks: ingredientLinks,\n    };\n    \n    try {\n        await updateDoc(doc(db, 'menuItems', id), itemUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update menu item.' };\n    }\n}\n\nexport async function deleteMenuItem(id: string) {\n    try {\n        await deleteDoc(doc(db, 'menuItems', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete menu item.' };\n    }\n}\n\n\nexport async function getMenuItems(): Promise<MenuItem[]> {\n  try {\n    const [menuItemsSnapshot, ingredientsSnapshot] = await Promise.all([\n        getDocs(collection(db, 'menuItems')),\n        getDocs(collection(db, 'ingredients'))\n    ]);\n\n    const ingredientsMap = new Map<string, Ingredient>();\n    ingredientsSnapshot.forEach(doc => {\n        const data = doc.data();\n        ingredientsMap.set(doc.id, { \n          id: doc.id,\n          name: data.name,\n          stock: data.stock || 0,\n          unit: data.unit || 'units',\n          cost: data.cost || 0,\n        } as Ingredient);\n    });\n\n    const items: MenuItem[] = [];\n    menuItemsSnapshot.forEach((doc) => {\n      const data = doc.data();\n      const menuItem = { id: doc.id, ...data } as MenuItem;\n      \n      let calculatedCost = 0;\n\n      // Resolve ingredient links\n      if (menuItem.ingredientLinks) {\n          menuItem.ingredients = menuItem.ingredientLinks\n            .map(link => {\n                const ingredient = ingredientsMap.get(link.ingredientId);\n                if (ingredient) {\n                    calculatedCost += (ingredient.cost || 0) * (link.quantity || 0);\n                    return { \n                      ...ingredient, \n                      isOptional: link.isOptional, \n                      quantity: link.quantity || 1, // Default quantity to 1 if not specified\n                    };\n                }\n                return null;\n            })\n            .filter(Boolean) as MenuItem['ingredients'];\n      }\n      \n      menuItem.cost = calculatedCost;\n      items.push(menuItem);\n    });\n\n    return items.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching menu items: \", error);\n    return [];\n  }\n}\n\n// Category Actions\nexport async function addCategory(formData: FormData) {\n  const newCategory = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'categories'), newCategory);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add category.' };\n  }\n}\n\n\nexport async function updateCategory(id: string, formData: FormData) {\n    const categoryUpdates = {\n        name: formData.get('name') as string,\n    };\n    try {\n        await updateDoc(doc(db, 'categories', id), categoryUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update category.' };\n    }\n}\n\nexport async function deleteCategory(id: string) {\n    try {\n        // TODO: Add logic to handle menu items in this category\n        await deleteDoc(doc(db, 'categories', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete category.' };\n    }\n}\n\n\nexport async function getCategories(): Promise<Category[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'categories'));\n    const categories: Category[] = [];\n    querySnapshot.forEach((doc) => {\n      categories.push({ id: doc.id, ...doc.data() } as Category);\n    });\n    return categories.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching categories: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":";;;;;;IAmCsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1168, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { MenuItem, Category, Ingredient } from '@/lib/types';\n\n// Menu Item Actions\nexport async function addMenuItem(formData: FormData) {\n  const ingredientLinksString = formData.get('ingredientLinks') as string;\n  const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n  const newItemData: Omit<MenuItem, 'id' | 'cost'> = {\n    name: formData.get('name') as string,\n    description: formData.get('description') as string,\n    price: parseFloat(formData.get('price') as string),\n    category: formData.get('category') as string,\n    imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n    imageHint: 'food placeholder',\n    preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n    ingredientLinks: ingredientLinks,\n  };\n\n  try {\n    await addDoc(collection(db, 'menuItems'), newItemData);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add menu item.' };\n  }\n}\n\nexport async function updateMenuItem(id: string, formData: FormData) {\n    const ingredientLinksString = formData.get('ingredientLinks') as string;\n    const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n    const itemUpdates = {\n        name: formData.get('name') as string,\n        description: formData.get('description') as string,\n        price: parseFloat(formData.get('price') as string),\n        category: formData.get('category') as string,\n        imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n        preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n        ingredientLinks: ingredientLinks,\n    };\n    \n    try {\n        await updateDoc(doc(db, 'menuItems', id), itemUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update menu item.' };\n    }\n}\n\nexport async function deleteMenuItem(id: string) {\n    try {\n        await deleteDoc(doc(db, 'menuItems', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete menu item.' };\n    }\n}\n\n\nexport async function getMenuItems(): Promise<MenuItem[]> {\n  try {\n    const [menuItemsSnapshot, ingredientsSnapshot] = await Promise.all([\n        getDocs(collection(db, 'menuItems')),\n        getDocs(collection(db, 'ingredients'))\n    ]);\n\n    const ingredientsMap = new Map<string, Ingredient>();\n    ingredientsSnapshot.forEach(doc => {\n        const data = doc.data();\n        ingredientsMap.set(doc.id, { \n          id: doc.id,\n          name: data.name,\n          stock: data.stock || 0,\n          unit: data.unit || 'units',\n          cost: data.cost || 0,\n        } as Ingredient);\n    });\n\n    const items: MenuItem[] = [];\n    menuItemsSnapshot.forEach((doc) => {\n      const data = doc.data();\n      const menuItem = { id: doc.id, ...data } as MenuItem;\n      \n      let calculatedCost = 0;\n\n      // Resolve ingredient links\n      if (menuItem.ingredientLinks) {\n          menuItem.ingredients = menuItem.ingredientLinks\n            .map(link => {\n                const ingredient = ingredientsMap.get(link.ingredientId);\n                if (ingredient) {\n                    calculatedCost += (ingredient.cost || 0) * (link.quantity || 0);\n                    return { \n                      ...ingredient, \n                      isOptional: link.isOptional, \n                      quantity: link.quantity || 1, // Default quantity to 1 if not specified\n                    };\n                }\n                return null;\n            })\n            .filter(Boolean) as MenuItem['ingredients'];\n      }\n      \n      menuItem.cost = calculatedCost;\n      items.push(menuItem);\n    });\n\n    return items.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching menu items: \", error);\n    return [];\n  }\n}\n\n// Category Actions\nexport async function addCategory(formData: FormData) {\n  const newCategory = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'categories'), newCategory);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add category.' };\n  }\n}\n\n\nexport async function updateCategory(id: string, formData: FormData) {\n    const categoryUpdates = {\n        name: formData.get('name') as string,\n    };\n    try {\n        await updateDoc(doc(db, 'categories', id), categoryUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update category.' };\n    }\n}\n\nexport async function deleteCategory(id: string) {\n    try {\n        // TODO: Add logic to handle menu items in this category\n        await deleteDoc(doc(db, 'categories', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete category.' };\n    }\n}\n\n\nexport async function getCategories(): Promise<Category[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'categories'));\n    const categories: Category[] = [];\n    querySnapshot.forEach((doc) => {\n      categories.push({ id: doc.id, ...doc.data() } as Category);\n    });\n    return categories.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching categories: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":";;;;;;IA4DsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1184, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { MenuItem, Category, Ingredient } from '@/lib/types';\n\n// Menu Item Actions\nexport async function addMenuItem(formData: FormData) {\n  const ingredientLinksString = formData.get('ingredientLinks') as string;\n  const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n  const newItemData: Omit<MenuItem, 'id' | 'cost'> = {\n    name: formData.get('name') as string,\n    description: formData.get('description') as string,\n    price: parseFloat(formData.get('price') as string),\n    category: formData.get('category') as string,\n    imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n    imageHint: 'food placeholder',\n    preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n    ingredientLinks: ingredientLinks,\n  };\n\n  try {\n    await addDoc(collection(db, 'menuItems'), newItemData);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add menu item.' };\n  }\n}\n\nexport async function updateMenuItem(id: string, formData: FormData) {\n    const ingredientLinksString = formData.get('ingredientLinks') as string;\n    const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n    const itemUpdates = {\n        name: formData.get('name') as string,\n        description: formData.get('description') as string,\n        price: parseFloat(formData.get('price') as string),\n        category: formData.get('category') as string,\n        imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n        preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n        ingredientLinks: ingredientLinks,\n    };\n    \n    try {\n        await updateDoc(doc(db, 'menuItems', id), itemUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update menu item.' };\n    }\n}\n\nexport async function deleteMenuItem(id: string) {\n    try {\n        await deleteDoc(doc(db, 'menuItems', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete menu item.' };\n    }\n}\n\n\nexport async function getMenuItems(): Promise<MenuItem[]> {\n  try {\n    const [menuItemsSnapshot, ingredientsSnapshot] = await Promise.all([\n        getDocs(collection(db, 'menuItems')),\n        getDocs(collection(db, 'ingredients'))\n    ]);\n\n    const ingredientsMap = new Map<string, Ingredient>();\n    ingredientsSnapshot.forEach(doc => {\n        const data = doc.data();\n        ingredientsMap.set(doc.id, { \n          id: doc.id,\n          name: data.name,\n          stock: data.stock || 0,\n          unit: data.unit || 'units',\n          cost: data.cost || 0,\n        } as Ingredient);\n    });\n\n    const items: MenuItem[] = [];\n    menuItemsSnapshot.forEach((doc) => {\n      const data = doc.data();\n      const menuItem = { id: doc.id, ...data } as MenuItem;\n      \n      let calculatedCost = 0;\n\n      // Resolve ingredient links\n      if (menuItem.ingredientLinks) {\n          menuItem.ingredients = menuItem.ingredientLinks\n            .map(link => {\n                const ingredient = ingredientsMap.get(link.ingredientId);\n                if (ingredient) {\n                    calculatedCost += (ingredient.cost || 0) * (link.quantity || 0);\n                    return { \n                      ...ingredient, \n                      isOptional: link.isOptional, \n                      quantity: link.quantity || 1, // Default quantity to 1 if not specified\n                    };\n                }\n                return null;\n            })\n            .filter(Boolean) as MenuItem['ingredients'];\n      }\n      \n      menuItem.cost = calculatedCost;\n      items.push(menuItem);\n    });\n\n    return items.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching menu items: \", error);\n    return [];\n  }\n}\n\n// Category Actions\nexport async function addCategory(formData: FormData) {\n  const newCategory = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'categories'), newCategory);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add category.' };\n  }\n}\n\n\nexport async function updateCategory(id: string, formData: FormData) {\n    const categoryUpdates = {\n        name: formData.get('name') as string,\n    };\n    try {\n        await updateDoc(doc(db, 'categories', id), categoryUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update category.' };\n    }\n}\n\nexport async function deleteCategory(id: string) {\n    try {\n        // TODO: Add logic to handle menu items in this category\n        await deleteDoc(doc(db, 'categories', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete category.' };\n    }\n}\n\n\nexport async function getCategories(): Promise<Category[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'categories'));\n    const categories: Category[] = [];\n    querySnapshot.forEach((doc) => {\n      categories.push({ id: doc.id, ...doc.data() } as Category);\n    });\n    return categories.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching categories: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":";;;;;;IAkJsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1200, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/menu/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { MenuItem, Category, Ingredient } from '@/lib/types';\n\n// Menu Item Actions\nexport async function addMenuItem(formData: FormData) {\n  const ingredientLinksString = formData.get('ingredientLinks') as string;\n  const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n  const newItemData: Omit<MenuItem, 'id' | 'cost'> = {\n    name: formData.get('name') as string,\n    description: formData.get('description') as string,\n    price: parseFloat(formData.get('price') as string),\n    category: formData.get('category') as string,\n    imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n    imageHint: 'food placeholder',\n    preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n    ingredientLinks: ingredientLinks,\n  };\n\n  try {\n    await addDoc(collection(db, 'menuItems'), newItemData);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add menu item.' };\n  }\n}\n\nexport async function updateMenuItem(id: string, formData: FormData) {\n    const ingredientLinksString = formData.get('ingredientLinks') as string;\n    const ingredientLinks = ingredientLinksString ? JSON.parse(ingredientLinksString) : [];\n\n    const itemUpdates = {\n        name: formData.get('name') as string,\n        description: formData.get('description') as string,\n        price: parseFloat(formData.get('price') as string),\n        category: formData.get('category') as string,\n        imageUrl: formData.get('imageUrl') as string || `https://placehold.co/600x400.png`,\n        preparationTime: parseInt(formData.get('preparationTime') as string, 10) || 5,\n        ingredientLinks: ingredientLinks,\n    };\n    \n    try {\n        await updateDoc(doc(db, 'menuItems', id), itemUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update menu item.' };\n    }\n}\n\nexport async function deleteMenuItem(id: string) {\n    try {\n        await deleteDoc(doc(db, 'menuItems', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete menu item.' };\n    }\n}\n\n\nexport async function getMenuItems(): Promise<MenuItem[]> {\n  try {\n    const [menuItemsSnapshot, ingredientsSnapshot] = await Promise.all([\n        getDocs(collection(db, 'menuItems')),\n        getDocs(collection(db, 'ingredients'))\n    ]);\n\n    const ingredientsMap = new Map<string, Ingredient>();\n    ingredientsSnapshot.forEach(doc => {\n        const data = doc.data();\n        ingredientsMap.set(doc.id, { \n          id: doc.id,\n          name: data.name,\n          stock: data.stock || 0,\n          unit: data.unit || 'units',\n          cost: data.cost || 0,\n        } as Ingredient);\n    });\n\n    const items: MenuItem[] = [];\n    menuItemsSnapshot.forEach((doc) => {\n      const data = doc.data();\n      const menuItem = { id: doc.id, ...data } as MenuItem;\n      \n      let calculatedCost = 0;\n\n      // Resolve ingredient links\n      if (menuItem.ingredientLinks) {\n          menuItem.ingredients = menuItem.ingredientLinks\n            .map(link => {\n                const ingredient = ingredientsMap.get(link.ingredientId);\n                if (ingredient) {\n                    calculatedCost += (ingredient.cost || 0) * (link.quantity || 0);\n                    return { \n                      ...ingredient, \n                      isOptional: link.isOptional, \n                      quantity: link.quantity || 1, // Default quantity to 1 if not specified\n                    };\n                }\n                return null;\n            })\n            .filter(Boolean) as MenuItem['ingredients'];\n      }\n      \n      menuItem.cost = calculatedCost;\n      items.push(menuItem);\n    });\n\n    return items.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching menu items: \", error);\n    return [];\n  }\n}\n\n// Category Actions\nexport async function addCategory(formData: FormData) {\n  const newCategory = {\n    name: formData.get('name') as string,\n  };\n\n  try {\n    await addDoc(collection(db, 'categories'), newCategory);\n    revalidatePath('/admin/menu');\n    revalidatePath('/');\n    return { success: true };\n  } catch (e) {\n    console.error('Error adding document: ', e);\n    return { success: false, error: 'Failed to add category.' };\n  }\n}\n\n\nexport async function updateCategory(id: string, formData: FormData) {\n    const categoryUpdates = {\n        name: formData.get('name') as string,\n    };\n    try {\n        await updateDoc(doc(db, 'categories', id), categoryUpdates);\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error updating document: ', e);\n        return { success: false, error: 'Failed to update category.' };\n    }\n}\n\nexport async function deleteCategory(id: string) {\n    try {\n        // TODO: Add logic to handle menu items in this category\n        await deleteDoc(doc(db, 'categories', id));\n        revalidatePath('/admin/menu');\n        revalidatePath('/');\n        return { success: true };\n    } catch (e) {\n        console.error('Error deleting document: ', e);\n        return { success: false, error: 'Failed to delete category.' };\n    }\n}\n\n\nexport async function getCategories(): Promise<Category[]> {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'categories'));\n    const categories: Category[] = [];\n    querySnapshot.forEach((doc) => {\n      categories.push({ id: doc.id, ...doc.data() } as Category);\n    });\n    return categories.sort((a,b) => a.name.localeCompare(b.name));\n  } catch (error) {\n    console.error(\"Error fetching categories: \", error);\n    return [];\n  }\n}\n"],"names":[],"mappings":";;;;;;IAiKsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1216, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/menu-client.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useOptimistic, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { PlusCircle, MoreHorizontal, Trash2, Edit, X } from \"lucide-react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter, DialogDescription } from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogDescription as AlertDialogDescriptionComponent } from \"@/components/ui/alert-dialog\";\nimport type { MenuItem, Category, Ingredient } from \"@/lib/types\";\nimport { addMenuItem, addCategory, updateMenuItem, deleteMenuItem, updateCategory, deleteCategory } from '@/app/admin/menu/actions';\nimport { useToast } from '@/hooks/use-toast';\nimport { ScrollArea } from '../ui/scroll-area';\nimport { cn } from '@/lib/utils';\n\ninterface MenuClientProps {\n    initialMenuItems: MenuItem[];\n    initialCategories: Category[];\n    availableIngredients: Ingredient[];\n}\n\ntype IngredientLink = {\n    id: string; // client-side unique id\n    ingredientId: string;\n    isOptional: boolean;\n    quantity: number;\n}\n\nfunction MenuItemFormDialog({ open, onOpenChange, categories, ingredients, onFormSubmit, initialData }) {\n    const [ingredientLinks, setIngredientLinks] = useState<IngredientLink[]>([]);\n    \n    useEffect(() => {\n        if (open) {\n            setIngredientLinks(initialData?.ingredientLinks?.map(link => ({...link, id: `link-${Date.now()}-${Math.random()}` })) || []);\n        }\n    }, [open, initialData]);\n\n    const addIngredientLink = () => {\n        setIngredientLinks(prev => [...prev, { id: `link-${Date.now()}`, ingredientId: '', isOptional: false, quantity: 1 }]);\n    };\n    \n    const updateIngredientLink = (id: string, field: 'ingredientId' | 'isOptional' | 'quantity', value: string | boolean | number) => {\n        setIngredientLinks(prev => prev.map(link => link.id === id ? { ...link, [field]: value } : link));\n    };\n\n    const removeIngredientLink = (id: string) => {\n        setIngredientLinks(prev => prev.filter(link => link.id !== id));\n    }\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const formData = new FormData(event.currentTarget);\n        const finalLinks = ingredientLinks\n            .filter(link => link.ingredientId && link.quantity > 0)\n            .map(({id, ...rest}) => rest); // remove client-side id\n        formData.set('ingredientLinks', JSON.stringify(finalLinks));\n        onFormSubmit(formData);\n    };\n\n    return (\n        <Dialog open={open} onOpenChange={onOpenChange}>\n            <DialogContent className=\"sm:max-w-lg max-h-[90vh] flex flex-col\">\n                <DialogHeader>\n                    <DialogTitle>{initialData ? 'Edit Menu Item' : 'Add New Menu Item'}</DialogTitle>\n                </DialogHeader>\n                <form id=\"menu-item-form\" onSubmit={handleSubmit} className=\"flex-grow overflow-y-auto -mr-6 pr-6 space-y-4\">\n                    <div className=\"space-y-2\"><Label htmlFor=\"item-name\">Item Name</Label><Input id=\"item-name\" name=\"name\" placeholder=\"e.g. Classic Burger\" required defaultValue={initialData?.name} /></div>\n                    <div className=\"space-y-2\"><Label htmlFor=\"item-description\">Description</Label><Textarea id=\"item-description\" name=\"description\" placeholder=\"A brief description of the item.\" defaultValue={initialData?.description}/></div>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                        <div className=\"space-y-2\"><Label htmlFor=\"item-price\">Sell Price</Label><Input id=\"item-price\" name=\"price\" type=\"number\" step=\"0.01\" placeholder=\"12.99\" required defaultValue={initialData?.price}/></div>\n                        <div className=\"space-y-2\">\n                            <Label htmlFor=\"item-category\">Category</Label>\n                            <Select name=\"category\" required defaultValue={initialData?.category}>\n                                <SelectTrigger id=\"item-category\"><SelectValue placeholder=\"Select a category\" /></SelectTrigger>\n                                <SelectContent>{categories.map(cat => <SelectItem key={cat.id} value={cat.id}>{cat.name}</SelectItem>)}</SelectContent>\n                            </Select>\n                        </div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                        <div className=\"space-y-2\"><Label htmlFor=\"item-prep-time\">Prep Time (mins)</Label><Input id=\"item-prep-time\" name=\"preparationTime\" type=\"number\" placeholder=\"15\" defaultValue={initialData?.preparationTime || 5} required /></div>\n                    </div>\n                    \n                    <div className=\"space-y-3\">\n                        <Label>Recipe Ingredients</Label>\n                        <div className=\"space-y-2 rounded-md border p-3\">\n                            {ingredientLinks.map(link => {\n                                const selectedIngredient = ingredients.find(ing => ing.id === link.ingredientId);\n                                return (\n                                <div key={link.id} className=\"grid grid-cols-[1fr_auto_auto_auto] items-center gap-2\">\n                                    <Select value={link.ingredientId} onValueChange={(val) => updateIngredientLink(link.id, 'ingredientId', val)}>\n                                        <SelectTrigger><SelectValue placeholder=\"Select Ingredient\"/></SelectTrigger>\n                                        <SelectContent>\n                                            {ingredients.map(ing => <SelectItem key={ing.id} value={ing.id}>{ing.name}</SelectItem>)}\n                                        </SelectContent>\n                                    </Select>\n\n                                    <div className=\"flex items-center\">\n                                        <Input \n                                            type=\"number\"\n                                            placeholder=\"Qty\" \n                                            className=\"w-20 h-9\"\n                                            value={link.quantity}\n                                            onChange={e => updateIngredientLink(link.id, 'quantity', parseFloat(e.target.value) || 0)}\n                                            min=\"0\"\n                                            step=\"any\"\n                                        />\n                                        {selectedIngredient && <span className=\"text-sm text-muted-foreground ml-2\">{selectedIngredient.unit}</span>}\n                                    </div>\n\n                                    <div className=\"flex items-center space-x-2\">\n                                        <Checkbox id={`optional-${link.id}`} checked={link.isOptional} onCheckedChange={(val) => updateIngredientLink(link.id, 'isOptional', Boolean(val))} />\n                                        <Label htmlFor={`optional-${link.id}`} className=\"cursor-pointer\">Optional</Label>\n                                    </div>\n\n                                    <Button type=\"button\" variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\" onClick={() => removeIngredientLink(link.id)}><X className=\"h-4 w-4\"/></Button>\n                                </div>\n                            )})}\n                            <Button type=\"button\" variant=\"outline\" size=\"sm\" className=\"w-full\" onClick={addIngredientLink}>\n                                <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Ingredient\n                            </Button>\n                        </div>\n                    </div>\n\n                    <div className=\"space-y-2\"><Label htmlFor=\"item-image\">Image URL</Label><Input id=\"item-image\" name=\"imageUrl\" placeholder=\"https://placehold.co/600x400.png\" defaultValue={initialData?.imageUrl}/></div>\n                </form>\n                <DialogFooter className=\"pt-4 border-t\">\n                    <Button type=\"button\" variant=\"outline\" onClick={() => onOpenChange(false)}>Cancel</Button>\n                    <Button type=\"submit\" form=\"menu-item-form\">{initialData ? 'Save Changes' : 'Add Item'}</Button>\n                </DialogFooter>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default function MenuClient({ initialMenuItems, initialCategories, availableIngredients }: MenuClientProps) {\n    const { toast } = useToast();\n    \n    // Menu Item State\n    const [isItemAddDialogOpen, setItemAddDialogOpen] = useState(false);\n    const [editingItem, setEditingItem] = useState<MenuItem | null>(null);\n    const [deletingItem, setDeletingItem] = useState<MenuItem | null>(null);\n\n    // Category State\n    const [isCategoryAddDialogOpen, setCategoryAddDialogOpen] = useState(false);\n    const [editingCategory, setEditingCategory] = useState<Category | null>(null);\n    const [deletingCategory, setDeletingCategory] = useState<Category | null>(null);\n\n    const [optimisticMenuItems, manageOptimisticMenuItems] = useOptimistic<MenuItem[], {action: 'add' | 'delete', item: MenuItem}>(\n        initialMenuItems,\n        (state, { action, item }) => {\n            switch(action) {\n                case 'add': return [...state, item].sort((a,b) => a.name.localeCompare(b.name));\n                case 'delete': return state.filter(i => i.id !== item.id);\n                default: return state;\n            }\n        }\n    );\n\n    const [optimisticCategories, manageOptimisticCategories] = useOptimistic<Category[], {action: 'add' | 'delete', category: Category}>(\n        initialCategories,\n        (state, { action, category }) => {\n            switch(action) {\n                case 'add': return [...state, category].sort((a,b) => a.name.localeCompare(b.name));\n                case 'delete': return state.filter(c => c.id !== category.id);\n                default: return state;\n            }\n        }\n    );\n\n    const handleItemAddSubmit = async (formData: FormData) => {\n        // Optimistic update not easily possible due to computed fields (cost).\n        // Let server action handle it.\n        setItemAddDialogOpen(false);\n        const result = await addMenuItem(formData);\n        if (!result.success) {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        } else {\n            toast({ title: 'Menu Item Added' });\n        }\n    };\n    \n    const handleItemEditSubmit = async (formData: FormData) => {\n        if (!editingItem) return;\n        setEditingItem(null);\n        const result = await updateMenuItem(editingItem.id, formData);\n        if (!result.success) {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        } else {\n            toast({ title: 'Menu Item Updated' });\n        }\n    };\n    \n    const handleItemDelete = async () => {\n        if (!deletingItem) return;\n        manageOptimisticMenuItems({ action: 'delete', item: deletingItem });\n        setDeletingItem(null);\n        const result = await deleteMenuItem(deletingItem.id);\n        if (!result.success) {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        } else {\n            toast({ title: 'Menu Item Deleted' });\n        }\n    };\n\n    const handleCategoryAddSubmit = async (formData: FormData) => {\n        const newCategory = { id: `optimistic-${Date.now()}`, name: formData.get('name') as string };\n        manageOptimisticCategories({ action: 'add', category: newCategory });\n        setCategoryAddDialogOpen(false);\n        const result = await addCategory(formData);\n        if (!result.success) {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        } else {\n            toast({ title: 'Category Added' });\n        }\n    };\n\n    const handleCategoryEditSubmit = async (formData: FormData) => {\n        if (!editingCategory) return;\n        setEditingCategory(null);\n        const result = await updateCategory(editingCategory.id, formData);\n        if (!result.success) {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        } else {\n            toast({ title: 'Category Updated' });\n        }\n    }\n    \n    const handleCategoryDelete = async () => {\n        if (!deletingCategory) return;\n        manageOptimisticCategories({ action: 'delete', category: deletingCategory });\n        setDeletingCategory(null);\n        const result = await deleteCategory(deletingCategory.id);\n        if (!result.success) {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        } else {\n            toast({ title: 'Category Deleted' });\n        }\n    }\n\n    return (\n        <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n                <div>\n                    <h1 className=\"text-3xl font-bold font-headline\">Menu Management</h1>\n                    <p className=\"text-muted-foreground\">Manage your categories and menu items from the database.</p>\n                </div>\n                 <Button onClick={() => setItemAddDialogOpen(true)}><PlusCircle className=\"mr-2 h-4 w-4\" /> Add New Item</Button>\n            </div>\n            <Card>\n                <CardHeader><CardTitle>Menu Items</CardTitle><CardDescription>A list of all items on your menu.</CardDescription></CardHeader>\n                <CardContent>\n                   <Table>\n                        <TableHeader>\n                            <TableRow>\n                                <TableHead>Name</TableHead>\n                                <TableHead className=\"hidden sm:table-cell\">Category</TableHead>\n                                <TableHead>Sell Price</TableHead>\n                                <TableHead>Cost</TableHead>\n                                <TableHead>Margin</TableHead>\n                                <TableHead className=\"hidden md:table-cell\">Prep Time</TableHead>\n                                <TableHead><span className=\"sr-only\">Actions</span></TableHead>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {optimisticMenuItems.map((item) => {\n                                const cost = item.cost || 0;\n                                const margin = item.price > 0 ? ((item.price - cost) / item.price) * 100 : 0;\n                                const marginColor = margin < 25 ? 'text-destructive' : margin < 50 ? 'text-yellow-600 dark:text-yellow-400' : 'text-green-600 dark:text-green-400';\n\n                                return (\n                                <TableRow key={item.id}>\n                                    <TableCell className=\"font-medium\">{item.name}</TableCell>\n                                    <TableCell className=\"hidden sm:table-cell\">{optimisticCategories.find(c => c.id === item.category)?.name}</TableCell>\n                                    <TableCell>${item.price.toFixed(2)}</TableCell>\n                                    <TableCell>${cost.toFixed(2)}</TableCell>\n                                    <TableCell className={cn(\"font-medium\", marginColor)}>{margin.toFixed(1)}%</TableCell>\n                                    <TableCell className=\"hidden md:table-cell\">{item.preparationTime} mins</TableCell>\n                                    <TableCell>\n                                        <DropdownMenu>\n                                            <DropdownMenuTrigger asChild><Button variant=\"ghost\" className=\"h-8 w-8 p-0\"><MoreHorizontal className=\"h-4 w-4\" /></Button></DropdownMenuTrigger>\n                                            <DropdownMenuContent align=\"end\">\n                                                <DropdownMenuItem onClick={() => setEditingItem(item)}><Edit className=\"mr-2 h-4 w-4\"/> Edit</DropdownMenuItem>\n                                                <DropdownMenuItem className=\"text-destructive\" onClick={() => setDeletingItem(item)}><Trash2 className=\"mr-2 h-4 w-4\"/> Delete</DropdownMenuItem>\n                                            </DropdownMenuContent>\n                                        </DropdownMenu>\n                                    </TableCell>\n                                </TableRow>\n                            )})}\n                        </TableBody>\n                    </Table>\n                </CardContent>\n            </Card>\n            <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between\">\n                    <div><CardTitle>Categories</CardTitle><CardDescription>Manage your menu categories.</CardDescription></div>\n                    <Button variant=\"outline\" onClick={() => setCategoryAddDialogOpen(true)}><PlusCircle className=\"mr-2 h-4 w-4\" /> Add Category</Button>\n                </CardHeader>\n                <CardContent>\n                   <Table>\n                        <TableHeader><TableRow><TableHead>Name</TableHead><TableHead><span className=\"sr-only\">Actions</span></TableHead></TableRow></TableHeader>\n                        <TableBody>\n                            {optimisticCategories.map((category) => (\n                                <TableRow key={category.id}>\n                                    <TableCell className=\"font-medium\">{category.name}</TableCell>\n                                    <TableCell className=\"text-right\">\n                                        <DropdownMenu>\n                                            <DropdownMenuTrigger asChild><Button variant=\"ghost\" className=\"h-8 w-8 p-0\"><MoreHorizontal className=\"h-4 w-4\" /></Button></DropdownMenuTrigger>\n                                            <DropdownMenuContent align=\"end\">\n                                                <DropdownMenuItem onClick={() => setEditingCategory(category)}><Edit className=\"mr-2 h-4 w-4\"/> Edit</DropdownMenuItem>\n                                                <DropdownMenuItem className=\"text-destructive\" onClick={() => setDeletingCategory(category)}><Trash2 className=\"mr-2 h-4 w-4\"/> Delete</DropdownMenuItem>\n                                            </DropdownMenuContent>\n                                        </DropdownMenu>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                   </Table>\n                </CardContent>\n            </Card>\n\n            {/* Menu Item Dialogs */}\n            <MenuItemFormDialog \n                open={isItemAddDialogOpen}\n                onOpenChange={setItemAddDialogOpen}\n                categories={optimisticCategories}\n                ingredients={availableIngredients}\n                onFormSubmit={handleItemAddSubmit}\n                initialData={null}\n            />\n            <MenuItemFormDialog \n                open={!!editingItem}\n                onOpenChange={(isOpen) => !isOpen && setEditingItem(null)}\n                categories={optimisticCategories}\n                ingredients={availableIngredients}\n                onFormSubmit={handleItemEditSubmit}\n                initialData={editingItem}\n            />\n             <AlertDialog open={!!deletingItem} onOpenChange={(isOpen) => !isOpen && setDeletingItem(null)}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                        <AlertDialogDescriptionComponent>This will permanently delete the item: <span className=\"font-bold\">{deletingItem?.name}</span>.</AlertDialogDescriptionComponent>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Cancel</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleItemDelete}>Delete</AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n            \n            {/* Category Dialogs */}\n            <Dialog open={isCategoryAddDialogOpen} onOpenChange={setCategoryAddDialogOpen}>\n                <DialogContent className=\"sm:max-w-sm\">\n                    <DialogHeader><DialogTitle>Add New Category</DialogTitle></DialogHeader>\n                    <form action={handleCategoryAddSubmit} className=\"space-y-4\">\n                        <div className=\"space-y-2\"><Label htmlFor=\"cat-name\">Category Name</Label><Input id=\"cat-name\" name=\"name\" placeholder=\"e.g. Sides\" required /></div>\n                        <DialogFooter><Button type=\"button\" variant=\"outline\" onClick={() => setCategoryAddDialogOpen(false)}>Cancel</Button><Button type=\"submit\">Add Category</Button></DialogFooter>\n                    </form>\n                </DialogContent>\n            </Dialog>\n            <Dialog open={!!editingCategory} onOpenChange={(isOpen) => !isOpen && setEditingCategory(null)}>\n                <DialogContent className=\"sm:max-w-sm\">\n                    <DialogHeader><DialogTitle>Edit Category</DialogTitle></DialogHeader>\n                    <form action={handleCategoryEditSubmit} className=\"space-y-4\">\n                        <div className=\"space-y-2\"><Label htmlFor=\"cat-name-edit\">Category Name</Label><Input id=\"cat-name-edit\" name=\"name\" placeholder=\"e.g. Sides\" required defaultValue={editingCategory?.name}/></div>\n                        <DialogFooter><Button type=\"button\" variant=\"outline\" onClick={() => setEditingCategory(null)}>Cancel</Button><Button type=\"submit\">Save Changes</Button></DialogFooter>\n                    </form>\n                </DialogContent>\n            </Dialog>\n             <AlertDialog open={!!deletingCategory} onOpenChange={(isOpen) => !isOpen && setDeletingCategory(null)}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                        <AlertDialogDescriptionComponent>This will permanently delete the category: <span className=\"font-bold\">{deletingCategory?.name}</span>.</AlertDialogDescriptionComponent>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Cancel</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleCategoryDelete}>Delete</AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}